// Translation System
// Language and translation management

// Current language setting
let currentLanguage = 'vi';

// Translation data
const translations = {
    en: {
        // App title and navigation
    appTitle: 'VieCloud Share',
        home: 'Home',
        devices: 'Devices',
        fileTransfer: 'File Transfer',
        settings: 'Settings',
        language: 'Language',
        help: 'Help',

        // Connection status
        connected: 'Connected',
        connecting: 'Connecting...',
        disconnected: 'Disconnected',

        // Device discovery
        lookingForDevices: 'Looking for nearby devices...',
        connectingToDiscovery: 'Connecting to discovery service...',
        discoveryUnavailable: 'Discovery service unavailable',
        noDevicesFound: 'No devices found',
        available: 'Available',
        makeSureSameNetwork: 'Make sure you\'re on the same network',

        // File operations
        selectFiles: 'Select Files',
        dropFilesHere: 'Drop files here or click to select',
        filesSelected: 'file(s) selected',
        waitingForDevices: 'Waiting for devices...',
        clickDeviceToSend: 'Click on a device to send',
        pleaseSelectFiles: 'Please select files first',

        // Connection actions
        connect: 'Connect',
        send: 'Send',
        disconnect: 'Disconnect',

        // File transfer
        sending: 'Sending',
        receiving: 'Receiving',
        sentSuccessfully: 'sent successfully!',
        receivedSuccessfully: 'received successfully!',
        transferAccepted: 'File transfer accepted!',
        transferDeclined: 'File transfer was declined',
        waitingForAcceptance: 'Waiting for {fileName} to be accepted...',
        dropFilesHere: 'Drop files here or click to select',
        supportAnyFileType: 'Support any file type',
        selectFiles: 'Select Files',

        // Room functionality
        yourRoom: 'Your Room',
        roomCode: 'Room Code',
        joinRoom: 'Join Room',
        copyRoomCode: 'Copy Room Code',
        refreshRoom: 'Refresh Room',
        enterRoomCode: 'Enter room code',
        roomCodeCopied: 'Room code copied!',
        newRoomGenerated: 'New room code generated!',

        // Settings
        deviceName: 'Device Name',
        autoAcceptFiles: 'Auto-accept files',
        soundNotifications: 'Sound notifications',
        wakeLock: 'Keep screen awake during transfers',
        persistentConnections: 'Maintain connections when network is lost',
        save: 'Save',
        cancel: 'Cancel',
        close: 'Close',
        settingsSaved: 'Settings saved!',

        // Language selection
        selectLanguage: 'Select Language',
        languageChanged: 'Language changed!',

        // Notifications and messages
        connectedSuccessfully: 'Connected successfully!',
        connectionError: 'Connection error',
        connectionLost: 'Connection lost, reconnecting...',
        deviceNotConnected: 'Device not connected',
        deviceDisconnected: 'Device disconnected',
        alreadyConnected: 'Already connected to this device',
        cannotConnectToSelf: 'Cannot connect to yourself',
        deviceNoLongerAvailable: 'Device no longer available',
        connectingTo: 'Connecting to {deviceName}...',
        connectedTo: 'Connected to {deviceName}!',
        disconnectedFrom: 'Disconnected from {deviceName}',
        failedToConnect: 'Failed to connect to {deviceName}',

        // File dialog
        acceptFile: 'Accept',
        rejectFile: 'Reject',
        from: 'from',

        // Help and about
    aboutTitle: 'About VieCloud Share',
        aboutDescription: 'Secure peer-to-peer file sharing in your browser',
        howToUse: 'How to use',
    step1: '1. Open VieCloud Share on another device',
        step2: '2. Devices will automatically discover each other',
        step3: '3. Select files and click on a device to send',
        step4: '4. Accept the transfer on the receiving device',

        // Help dialog sections
        helpNearbyDevices: 'Nearby Devices',
        helpNearbyDevicesDesc: 'Devices on the same network will automatically appear. Click "Connect" to establish a connection.',
        helpRoomSharing: 'Room Sharing',
        helpRoomSharingDesc: 'Share your room code or QR code with others to let them join your room from anywhere.',
        helpFileTransfer: 'File Transfer',
        helpFileTransferDesc: 'Drag & drop files or click "Select Files" to choose files. Then click on a connected device to send.',
        helpManualConnection: 'Manual Connection',
        helpManualConnectionDesc: 'If automatic discovery doesn\'t work, you can manually enter a device ID to connect.',
        helpPrivacySecurity: 'Privacy & Security',
        helpPrivacySecurityDesc: 'All transfers are peer-to-peer and encrypted. No files are stored on our servers.',

        // Additional UI elements
        yourDevice: 'Your Device',
        sendFiles: 'Send Files',
        manualConnection: 'Manual Connection',
        connectedDevices: 'Connected Devices',
        nearbyDevices: 'Nearby Devices',
        incomingFile: 'Incoming File',
        deviceId: 'Device ID',
        enterDeviceId: 'Enter device ID to connect',
        enterDeviceIdHelper: 'Enter the Device ID from another device to connect directly',
        roomCodeLabel: 'Room Code',
        enterRoomCode: 'Enter 5-character room code',
        enterRoomCodeHelper: 'Enter the room code shared by another device to join their room.',
        yourRoomCode: 'Your Room Code',
        copy: 'Copy',
        newCode: 'New Code',
        scanToJoin: 'Scan to join room',
        howToShareRoom: 'üí° How to share your room:',
        shareRoomCode: 'Share the room code with others',
        scanQRCode: 'Let them scan the QR code',
        sendRoomURL: 'Send them the room URL',
        gotIt: 'Got it',
        decline: 'Decline',
        accept: 'Accept',
        loading: 'Loading...',
        supportAnyFileType: 'Support any file type',
        makeSureSameNetwork: 'Make sure you\'re on the same network',
        transferFilesCrossPlatform: 'Transfer Files Cross-Platform',
        noSetupNoSignup: 'No Setup, No Signup.',
    howToUsePairDrop: 'How to Use VieCloud Share',
        nearbyDevicesHelp: 'üîç Nearby Devices',
        nearbyDevicesDesc: 'Devices on the same network will automatically appear. Click "Connect" to establish a connection.',
        roomSharingHelp: 'üè† Room Sharing',
        roomSharingDesc: 'Share your room code or QR code with others to let them join your room from anywhere.',
        fileTransferHelp: 'üìÅ File Transfer',
        fileTransferDesc: 'Drag & drop files or click "Select Files" to choose files. Then click on a connected device to send.',
        manualConnectionHelp: 'üîó Manual Connection',
        manualConnectionDesc: 'If automatic discovery doesn\'t work, you can manually enter a device ID to connect.',
        privacySecurityHelp: 'üîí Privacy & Security',
        privacySecurityDesc: 'All transfers are peer-to-peer and encrypted. No files are stored on our servers.',
        autoAcceptHelper: 'Automatically download files without asking for confirmation. Only enable if you trust the sender.',
        soundNotificationsHelper: 'Play different sounds for success, warning, and error notifications.',

        // Connected devices
        connectedDevicesCount: '{count} connected',
        sendFilesToDevice: 'Send Files'
    },
    vi: {
        // App title and navigation
    appTitle: 'VieCloud Share',
        home: 'Trang ch·ªß',
        devices: 'Thi·∫øt b·ªã',
        fileTransfer: 'Truy·ªÅn t·ªáp',
        settings: 'C√†i ƒë·∫∑t',
        language: 'Ng√¥n ng·ªØ',
        help: 'Tr·ª£ gi√∫p',

        // Connection status
        connected: 'ƒê√£ k·∫øt n·ªëi',
        connecting: 'ƒêang k·∫øt n·ªëi...',
        disconnected: 'ƒê√£ ng·∫Øt k·∫øt n·ªëi',

        // Device discovery
        lookingForDevices: 'ƒêang t√¨m ki·∫øm thi·∫øt b·ªã g·∫ßn ƒë√¢y...',
        connectingToDiscovery: 'ƒêang k·∫øt n·ªëi ƒë·∫øn d·ªãch v·ª• kh√°m ph√°...',
        discoveryUnavailable: 'D·ªãch v·ª• kh√°m ph√° kh√¥ng kh·∫£ d·ª•ng',
        noDevicesFound: 'Kh√¥ng t√¨m th·∫•y thi·∫øt b·ªã n√†o',
        available: 'C√≥ s·∫µn',
        makeSureSameNetwork: 'ƒê·∫£m b·∫£o b·∫°n ƒëang ·ªü c√πng m·∫°ng',

        // File operations
        selectFiles: 'Ch·ªçn t·ªáp',
        dropFilesHere: 'Th·∫£ t·ªáp v√†o ƒë√¢y ho·∫∑c nh·∫•p ƒë·ªÉ ch·ªçn',
        filesSelected: 't·ªáp ƒë√£ ch·ªçn',
        waitingForDevices: 'ƒêang ch·ªù thi·∫øt b·ªã...',
        clickDeviceToSend: 'Nh·∫•p v√†o thi·∫øt b·ªã ƒë·ªÉ g·ª≠i',
        pleaseSelectFiles: 'Vui l√≤ng ch·ªçn t·ªáp tr∆∞·ªõc',

        // Connection actions
        connect: 'K·∫øt n·ªëi',
        send: 'G·ª≠i',
        disconnect: 'Ng·∫Øt k·∫øt n·ªëi',

        // File transfer
        sending: 'ƒêang g·ª≠i',
        receiving: 'ƒêang nh·∫≠n',
        sentSuccessfully: 'ƒë√£ g·ª≠i th√†nh c√¥ng!',
        receivedSuccessfully: 'ƒë√£ nh·∫≠n th√†nh c√¥ng!',
        transferAccepted: 'Chuy·ªÉn t·ªáp ƒë√£ ƒë∆∞·ª£c ch·∫•p nh·∫≠n!',
        transferDeclined: 'Chuy·ªÉn t·ªáp ƒë√£ b·ªã t·ª´ ch·ªëi',
        waitingForAcceptance: 'ƒêang ch·ªù {fileName} ƒë∆∞·ª£c ch·∫•p nh·∫≠n...',
        dropFilesHere: 'Th·∫£ t·ªáp v√†o ƒë√¢y ho·∫∑c nh·∫•p ƒë·ªÉ ch·ªçn',
        supportAnyFileType: 'H·ªó tr·ª£ m·ªçi lo·∫°i t·ªáp',
        selectFiles: 'Ch·ªçn t·ªáp',

        // Room functionality
        yourRoom: 'Ph√≤ng c·ªßa b·∫°n',
        roomCode: 'M√£ ph√≤ng',
        joinRoom: 'Tham gia ph√≤ng',
        copyRoomCode: 'Sao ch√©p m√£ ph√≤ng',
        refreshRoom: 'L√†m m·ªõi ph√≤ng',
        enterRoomCode: 'Nh·∫≠p m√£ ph√≤ng',
        roomCodeCopied: 'ƒê√£ sao ch√©p m√£ ph√≤ng!',
        newRoomGenerated: 'ƒê√£ t·∫°o m√£ ph√≤ng m·ªõi!',

        // Settings
        deviceName: 'T√™n thi·∫øt b·ªã',
        autoAcceptFiles: 'T·ª± ƒë·ªông ch·∫•p nh·∫≠n t·ªáp',
        soundNotifications: 'Th√¥ng b√°o √¢m thanh',
        wakeLock: 'Gi·ªØ m√†n h√¨nh s√°ng khi truy·ªÅn t·ªáp',
        persistentConnections: 'Duy tr√¨ k·∫øt n·ªëi khi m·∫•t m·∫°ng',
        save: 'L∆∞u',
        cancel: 'H·ªßy',
        close: 'ƒê√≥ng',
        settingsSaved: 'ƒê√£ l∆∞u c√†i ƒë·∫∑t!',

        // Language selection
        selectLanguage: 'Ch·ªçn ng√¥n ng·ªØ',
        languageChanged: 'ƒê√£ thay ƒë·ªïi ng√¥n ng·ªØ!',

        // Notifications and messages
        connectedSuccessfully: 'K·∫øt n·ªëi th√†nh c√¥ng!',
        connectionError: 'L·ªói k·∫øt n·ªëi',
        connectionLost: 'M·∫•t k·∫øt n·ªëi, ƒëang k·∫øt n·ªëi l·∫°i...',
        deviceNotConnected: 'Thi·∫øt b·ªã ch∆∞a k·∫øt n·ªëi',
        deviceDisconnected: 'Thi·∫øt b·ªã ƒë√£ ng·∫Øt k·∫øt n·ªëi',
        alreadyConnected: 'ƒê√£ k·∫øt n·ªëi v·ªõi thi·∫øt b·ªã n√†y',
        cannotConnectToSelf: 'Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi ch√≠nh m√¨nh',
        deviceNoLongerAvailable: 'Thi·∫øt b·ªã kh√¥ng c√≤n kh·∫£ d·ª•ng',
        connectingTo: 'ƒêang k·∫øt n·ªëi ƒë·∫øn {deviceName}...',
        connectedTo: 'ƒê√£ k·∫øt n·ªëi v·ªõi {deviceName}!',
        disconnectedFrom: 'ƒê√£ ng·∫Øt k·∫øt n·ªëi kh·ªèi {deviceName}',
        failedToConnect: 'Kh√¥ng th·ªÉ k·∫øt n·ªëi v·ªõi {deviceName}',

        // File dialog
        acceptFile: 'Ch·∫•p nh·∫≠n',
        rejectFile: 'T·ª´ ch·ªëi',
        from: 't·ª´',

        // Help and about
    aboutTitle: 'V·ªÅ VieCloud Share',
        aboutDescription: 'Chia s·∫ª t·ªáp ngang h√†ng an to√†n trong tr√¨nh duy·ªát c·ªßa b·∫°n',
        howToUse: 'C√°ch s·ª≠ d·ª•ng',
    step1: '1. M·ªü VieCloud Share tr√™n thi·∫øt b·ªã kh√°c',
        step2: '2. C√°c thi·∫øt b·ªã s·∫Ω t·ª± ƒë·ªông kh√°m ph√° l·∫´n nhau',
        step3: '3. Ch·ªçn t·ªáp v√† nh·∫•p v√†o thi·∫øt b·ªã ƒë·ªÉ g·ª≠i',
        step4: '4. Ch·∫•p nh·∫≠n chuy·ªÉn t·ªáp tr√™n thi·∫øt b·ªã nh·∫≠n',

        // Help dialog sections
        helpNearbyDevices: 'Thi·∫øt b·ªã g·∫ßn ƒë√¢y',
        helpNearbyDevicesDesc: 'C√°c thi·∫øt b·ªã tr√™n c√πng m·∫°ng s·∫Ω t·ª± ƒë·ªông xu·∫•t hi·ªán. Nh·∫•p "K·∫øt n·ªëi" ƒë·ªÉ thi·∫øt l·∫≠p k·∫øt n·ªëi.',
        helpRoomSharing: 'Chia s·∫ª ph√≤ng',
        helpRoomSharingDesc: 'Chia s·∫ª m√£ ph√≤ng ho·∫∑c m√£ QR v·ªõi ng∆∞·ªùi kh√°c ƒë·ªÉ h·ªç c√≥ th·ªÉ tham gia ph√≤ng c·ªßa b·∫°n t·ª´ b·∫•t k·ª≥ ƒë√¢u.',
        helpFileTransfer: 'Truy·ªÅn t·ªáp',
        helpFileTransferDesc: 'K√©o th·∫£ t·ªáp ho·∫∑c nh·∫•p "Ch·ªçn t·ªáp" ƒë·ªÉ ch·ªçn t·ªáp. Sau ƒë√≥ nh·∫•p v√†o thi·∫øt b·ªã ƒë√£ k·∫øt n·ªëi ƒë·ªÉ g·ª≠i.',
        helpManualConnection: 'K·∫øt n·ªëi th·ªß c√¥ng',
        helpManualConnectionDesc: 'N·∫øu t·ª± ƒë·ªông ph√°t hi·ªán kh√¥ng ho·∫°t ƒë·ªông, b·∫°n c√≥ th·ªÉ nh·∫≠p th·ªß c√¥ng ID thi·∫øt b·ªã ƒë·ªÉ k·∫øt n·ªëi.',
        helpPrivacySecurity: 'Quy·ªÅn ri√™ng t∆∞ & B·∫£o m·∫≠t',
        helpPrivacySecurityDesc: 'T·∫•t c·∫£ vi·ªác truy·ªÅn t·∫£i ƒë·ªÅu l√† ngang h√†ng v√† ƒë∆∞·ª£c m√£ h√≥a. Kh√¥ng c√≥ t·ªáp n√†o ƒë∆∞·ª£c l∆∞u tr·ªØ tr√™n m√°y ch·ªß c·ªßa ch√∫ng t√¥i.',

        // Additional UI elements
        yourDevice: 'Thi·∫øt b·ªã c·ªßa b·∫°n',
        sendFiles: 'G·ª≠i t·ªáp',
        manualConnection: 'K·∫øt n·ªëi th·ªß c√¥ng',
        connectedDevices: 'Thi·∫øt b·ªã ƒë√£ k·∫øt n·ªëi',
        nearbyDevices: 'Thi·∫øt b·ªã g·∫ßn ƒë√¢y',
        incomingFile: 'T·ªáp ƒë·∫øn',
        deviceId: 'ID thi·∫øt b·ªã',
        enterDeviceId: 'Nh·∫≠p ID thi·∫øt b·ªã ƒë·ªÉ k·∫øt n·ªëi',
        enterDeviceIdHelper: 'Nh·∫≠p ID thi·∫øt b·ªã t·ª´ thi·∫øt b·ªã kh√°c ƒë·ªÉ k·∫øt n·ªëi tr·ª±c ti·∫øp',
        roomCodeLabel: 'M√£ ph√≤ng',
        enterRoomCode: 'Nh·∫≠p m√£ ph√≤ng 5 k√Ω t·ª±',
        enterRoomCodeHelper: 'Nh·∫≠p m√£ ph√≤ng ƒë∆∞·ª£c chia s·∫ª b·ªüi thi·∫øt b·ªã kh√°c ƒë·ªÉ tham gia ph√≤ng c·ªßa h·ªç.',
        yourRoomCode: 'M√£ ph√≤ng c·ªßa b·∫°n:',
        copy: 'Sao ch√©p',
        newCode: 'M√£ m·ªõi',
        scanToJoin: 'Qu√©t ƒë·ªÉ tham gia ph√≤ng',
        howToShareRoom: 'üí° C√°ch chia s·∫ª ph√≤ng c·ªßa b·∫°n:',
        shareRoomCode: 'Chia s·∫ª m√£ ph√≤ng v·ªõi ng∆∞·ªùi kh√°c',
        scanQRCode: 'ƒê·ªÉ h·ªç qu√©t m√£ QR',
        sendRoomURL: 'G·ª≠i cho h·ªç URL ph√≤ng',
        gotIt: 'ƒê√£ hi·ªÉu',
        decline: 'T·ª´ ch·ªëi',
        accept: 'Ch·∫•p nh·∫≠n',
        loading: 'ƒêang t·∫£i...',
        supportAnyFileType: 'H·ªó tr·ª£ m·ªçi lo·∫°i t·ªáp',
        makeSureSameNetwork: 'ƒê·∫£m b·∫£o b·∫°n ƒëang ·ªü c√πng m·∫°ng',
        transferFilesCrossPlatform: 'Truy·ªÅn T·ªáp ƒêa N·ªÅn T·∫£ng',
        noSetupNoSignup: 'Kh√¥ng c·∫ßn c√†i ƒë·∫∑t, kh√¥ng c·∫ßn ƒëƒÉng k√Ω.',
    howToUsePairDrop: 'C√°ch s·ª≠ d·ª•ng VieCloud Share',
        nearbyDevicesHelp: 'üîç Thi·∫øt b·ªã g·∫ßn ƒë√¢y',
        nearbyDevicesDesc: 'C√°c thi·∫øt b·ªã tr√™n c√πng m·∫°ng s·∫Ω t·ª± ƒë·ªông xu·∫•t hi·ªán. Nh·∫•p "K·∫øt n·ªëi" ƒë·ªÉ thi·∫øt l·∫≠p k·∫øt n·ªëi.',
        roomSharingHelp: 'üè† Chia s·∫ª ph√≤ng',
        roomSharingDesc: 'Chia s·∫ª m√£ ph√≤ng ho·∫∑c m√£ QR c·ªßa b·∫°n v·ªõi ng∆∞·ªùi kh√°c ƒë·ªÉ h·ªç tham gia ph√≤ng t·ª´ b·∫•t k·ª≥ ƒë√¢u.',
        fileTransferHelp: 'üìÅ Truy·ªÅn t·ªáp',
        fileTransferDesc: 'K√©o th·∫£ t·ªáp ho·∫∑c nh·∫•p "Ch·ªçn t·ªáp" ƒë·ªÉ ch·ªçn t·ªáp. Sau ƒë√≥ nh·∫•p v√†o thi·∫øt b·ªã ƒë√£ k·∫øt n·ªëi ƒë·ªÉ g·ª≠i.',
        manualConnectionHelp: 'üîó K·∫øt n·ªëi th·ªß c√¥ng',
        manualConnectionDesc: 'N·∫øu kh√°m ph√° t·ª± ƒë·ªông kh√¥ng ho·∫°t ƒë·ªông, b·∫°n c√≥ th·ªÉ nh·∫≠p ID thi·∫øt b·ªã ƒë·ªÉ k·∫øt n·ªëi th·ªß c√¥ng.',
        privacySecurityHelp: 'üîí Quy·ªÅn ri√™ng t∆∞ & B·∫£o m·∫≠t',
        privacySecurityDesc: 'T·∫•t c·∫£ vi·ªác truy·ªÅn t·ªáp ƒë·ªÅu ngang h√†ng v√† ƒë∆∞·ª£c m√£ h√≥a. Kh√¥ng c√≥ t·ªáp n√†o ƒë∆∞·ª£c l∆∞u tr√™n m√°y ch·ªß c·ªßa ch√∫ng t√¥i.',
        autoAcceptHelper: 'T·ª± ƒë·ªông t·∫£i xu·ªëng t·ªáp m√† kh√¥ng c·∫ßn x√°c nh·∫≠n. Ch·ªâ b·∫≠t n·∫øu b·∫°n tin t∆∞·ªüng ng∆∞·ªùi g·ª≠i.',
        soundNotificationsHelper: 'Ph√°t √¢m thanh kh√°c nhau cho th√¥ng b√°o th√†nh c√¥ng, c·∫£nh b√°o v√† l·ªói.',

        // Connected devices
        connectedDevicesCount: '{count} ƒë√£ k·∫øt n·ªëi',
        sendFilesToDevice: 'G·ª≠i t·ªáp'
    }
};

// Translation function
function t(key, params = {}) {
    const translation = translations[currentLanguage]?.[key] || translations['en'][key] || key;

    // Replace parameters in translation
    return translation.replace(/\{(\w+)\}/g, (match, paramKey) => {
        return params[paramKey] || match;
    });
}

// Language management functions
function setLanguage(lang) {
    if (translations[lang]) {
        currentLanguage = lang;
        localStorage.setItem('language', lang);
        updateUILanguage();
        updateLanguageSelection();
        showNotification(t('languageChanged'), 'success');
        document.getElementById('language-dialog').open = false;
    }
}

function loadSavedLanguage() {
    const savedLang = localStorage.getItem('language');
    if (savedLang && translations[savedLang]) {
        currentLanguage = savedLang;
        updateUILanguage();
        // Delay updating language selection until DOM is ready
        setTimeout(() => {
            updateLanguageSelection();
        }, 100);
    }
}

function updateLanguageSelection() {
    // Update language dialog to show current selection
    const languageItems = document.querySelectorAll('#language-dialog mdui-list-item');
    languageItems.forEach(item => {
        const onclick = item.getAttribute('onclick');
        if (onclick) {
            const lang = onclick.match(/setLanguage\('(\w+)'\)/)?.[1];
            if (lang === currentLanguage) {
                item.style.backgroundColor = '#e3f2fd';
                item.style.fontWeight = 'bold';
                if (!item.querySelector('.current-indicator')) {
                    const indicator = document.createElement('mdui-icon');
                    indicator.className = 'current-indicator';
                    indicator.setAttribute('name', 'check');
                    indicator.style.color = '#2196f3';
                    indicator.style.marginLeft = 'auto';
                    item.appendChild(indicator);
                }
            } else {
                item.style.backgroundColor = '';
                item.style.fontWeight = '';
                const indicator = item.querySelector('.current-indicator');
                if (indicator) {
                    indicator.remove();
                }
            }
        }
    });
}

// Export to global scope
window.currentLanguage = currentLanguage;
window.translations = translations;
window.t = t;
window.setLanguage = setLanguage;
window.loadSavedLanguage = loadSavedLanguage;
window.updateLanguageSelection = updateLanguageSelection;
