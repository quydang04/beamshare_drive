import { parser as n } from "../../../../../@lezer_json@1.0.2/node_modules/@lezer/json/dist/index.mjs";
import { LanguageSupport as r, LRLanguage as o, indentNodeProp as a, continuedIndent as e, foldNodeProp as t, foldInside as d } from "../../../../../@codemirror_language@6.10.2/node_modules/@codemirror/language/dist/index.mjs";
const p = /* @__PURE__ */ o.define({
  name: "json",
  parser: /* @__PURE__ */ n.configure({
    props: [
      /* @__PURE__ */ a.add({
        Object: /* @__PURE__ */ e({ except: /^\s*\}/ }),
        Array: /* @__PURE__ */ e({ except: /^\s*\]/ })
      }),
      /* @__PURE__ */ t.add({
        "Object Array": d
      })
    ]
  }),
  languageData: {
    closeBrackets: { brackets: ["[", "{", '"'] },
    indentOnInput: /^\s*[\}\]]$/
  }
});
function u() {
  return new r(p);
}
export {
  u as json,
  p as jsonLanguage
};
//# sourceMappingURL=index.mjs.map
