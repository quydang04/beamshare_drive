import { noop as v, toValue as y, isObject as A, tryOnScopeDispose as w, isClient as E } from "../../../../@vueuse_shared@11.1.0_vue@3.5.11_typescript@5.4.2_/node_modules/@vueuse/shared/index.mjs";
import { watch as L } from "vue";
const m = E ? window : void 0;
function b(e) {
  var t;
  const n = y(e);
  return (t = n == null ? void 0 : n.$el) != null ? t : n;
}
function j(...e) {
  let t, n, o, s;
  if (typeof e[0] == "string" || Array.isArray(e[0]) ? ([n, o, s] = e, t = m) : [t, n, o, s] = e, !t)
    return v;
  Array.isArray(n) || (n = [n]), Array.isArray(o) || (o = [o]);
  const u = [], f = () => {
    u.forEach((r) => r()), u.length = 0;
  }, p = (r, i, l, c) => (r.addEventListener(i, l, c), () => r.removeEventListener(i, l, c)), a = L(
    () => [b(t), y(s)],
    ([r, i]) => {
      if (f(), !r)
        return;
      const l = A(i) ? { ...i } : i;
      u.push(
        ...n.flatMap((c) => o.map((h) => p(r, c, h, l)))
      );
    },
    { immediate: !0, flush: "post" }
  ), d = () => {
    a(), f();
  };
  return w(d), d;
}
function C(e) {
  return typeof e == "function" ? e : typeof e == "string" ? (t) => t.key === e : Array.isArray(e) ? (t) => e.includes(t.key) : () => !0;
}
function S(...e) {
  let t, n, o = {};
  e.length === 3 ? (t = e[0], n = e[1], o = e[2]) : e.length === 2 ? typeof e[1] == "object" ? (t = !0, n = e[0], o = e[1]) : (t = e[0], n = e[1]) : (t = !0, n = e[0]);
  const {
    target: s = m,
    eventName: u = "keydown",
    passive: f = !1,
    dedupe: p = !1
  } = o, a = C(t);
  return j(s, u, (r) => {
    r.repeat && y(p) || a(r) && n(r);
  }, f);
}
export {
  m as defaultWindow,
  E as isClient,
  A as isObject,
  v as noop,
  S as onKeyStroke,
  y as toValue,
  w as tryOnScopeDispose,
  b as unrefElement,
  j as useEventListener
};
//# sourceMappingURL=index.mjs.map
