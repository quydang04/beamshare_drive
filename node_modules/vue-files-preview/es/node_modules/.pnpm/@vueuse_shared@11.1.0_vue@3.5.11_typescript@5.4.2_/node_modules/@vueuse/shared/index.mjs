import { getCurrentScope as e, onScopeDispose as t, unref as n } from "vue";
function i(o) {
  return e() ? (t(o), !0) : !1;
}
function p(o) {
  return typeof o == "function" ? o() : n(o);
}
const f = typeof window < "u" && typeof document < "u";
typeof WorkerGlobalScope < "u" && globalThis instanceof WorkerGlobalScope;
const c = Object.prototype.toString, u = (o) => c.call(o) === "[object Object]", s = () => {
};
export {
  f as isClient,
  u as isObject,
  s as noop,
  p as toValue,
  i as tryOnScopeDispose
};
//# sourceMappingURL=index.mjs.map
