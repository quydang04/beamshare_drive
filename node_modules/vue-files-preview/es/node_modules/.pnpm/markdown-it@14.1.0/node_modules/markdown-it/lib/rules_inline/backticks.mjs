function s(c, h) {
  let n = c.pos;
  if (c.src.charCodeAt(n) !== 96)
    return !1;
  const p = n;
  n++;
  const k = c.posMax;
  for (; n < k && c.src.charCodeAt(n) === 96; )
    n++;
  const o = c.src.slice(p, n), i = o.length;
  if (c.backticksScanned && (c.backticks[i] || 0) <= p)
    return h || (c.pending += o), c.pos += i, !0;
  let r = n, e;
  for (; (e = c.src.indexOf("`", r)) !== -1; ) {
    for (r = e + 1; r < k && c.src.charCodeAt(r) === 96; )
      r++;
    const l = r - e;
    if (l === i) {
      if (!h) {
        const d = c.push("code_inline", "code", 0);
        d.markup = o, d.content = c.src.slice(n, e).replace(/\n/g, " ").replace(/^ (.+) $/, "$1");
      }
      return c.pos = r, !0;
    }
    c.backticks[l] = e;
  }
  return c.backticksScanned = !0, h || (c.pending += o), c.pos += i, !0;
}
export {
  s as default
};
//# sourceMappingURL=backticks.mjs.map
