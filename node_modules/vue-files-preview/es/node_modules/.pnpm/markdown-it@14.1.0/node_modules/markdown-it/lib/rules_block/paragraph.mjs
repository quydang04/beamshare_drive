function g(n, e, l) {
  const i = n.md.block.ruler.getRules("paragraph"), c = n.parentType;
  let r = e + 1;
  for (n.parentType = "paragraph"; r < l && !n.isEmpty(r); r++) {
    if (n.sCount[r] - n.blkIndent > 3 || n.sCount[r] < 0)
      continue;
    let u = !1;
    for (let o = 0, h = i.length; o < h; o++)
      if (i[o](n, r, l, !0)) {
        u = !0;
        break;
      }
    if (u)
      break;
  }
  const a = n.getLines(e, r, n.blkIndent, !1).trim();
  n.line = r;
  const f = n.push("paragraph_open", "p", 1);
  f.map = [e, n.line];
  const p = n.push("inline", "", 0);
  return p.content = a, p.map = [e, n.line], p.children = [], n.push("paragraph_close", "p", -1), n.parentType = c, !0;
}
export {
  g as default
};
//# sourceMappingURL=paragraph.mjs.map
