function m(n, f, d, C) {
  let r = n.bMarks[f] + n.tShift[f], o = n.eMarks[f];
  if (n.sCount[f] - n.blkIndent >= 4 || r + 3 > o)
    return !1;
  const i = n.src.charCodeAt(r);
  if (i !== 126 && i !== 96)
    return !1;
  let u = r;
  r = n.skipChars(r, i);
  let c = r - u;
  if (c < 3)
    return !1;
  const h = n.src.slice(u, r), k = n.src.slice(r, o);
  if (i === 96 && k.indexOf(String.fromCharCode(i)) >= 0)
    return !1;
  if (C)
    return !0;
  let e = f, p = !1;
  for (; e++, !(e >= d || (r = u = n.bMarks[e] + n.tShift[e], o = n.eMarks[e], r < o && n.sCount[e] < n.blkIndent)); )
    if (n.src.charCodeAt(r) === i && !(n.sCount[e] - n.blkIndent >= 4) && (r = n.skipChars(r, i), !(r - u < c) && (r = n.skipSpaces(r), !(r < o)))) {
      p = !0;
      break;
    }
  c = n.sCount[f], n.line = e + (p ? 1 : 0);
  const l = n.push("fence", "code", 0);
  return l.info = k, l.content = n.getLines(f + 1, e, c, !0), l.markup = h, l.map = [f, n.line], !0;
}
export {
  m as default
};
//# sourceMappingURL=fence.mjs.map
