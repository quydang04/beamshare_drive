{"version":3,"file":"ini.mjs","sources":["../../../../../../../../../node_modules/.pnpm/highlight.js@11.10.0/node_modules/highlight.js/lib/languages/ini.js"],"sourcesContent":["/*\nLanguage: TOML, also INI\nDescription: TOML aims to be a minimal configuration file format that's easy to read due to obvious semantics.\nContributors: Guillaume Gomez <guillaume1.gomez@gmail.com>\nCategory: common, config\nWebsite: https://github.com/toml-lang/toml\n*/\n\nfunction ini(hljs) {\n  const regex = hljs.regex;\n  const NUMBERS = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      { begin: /([+-]+)?[\\d]+_[\\d_]+/ },\n      { begin: hljs.NUMBER_RE }\n    ]\n  };\n  const COMMENTS = hljs.COMMENT();\n  COMMENTS.variants = [\n    {\n      begin: /;/,\n      end: /$/\n    },\n    {\n      begin: /#/,\n      end: /$/\n    }\n  ];\n  const VARIABLES = {\n    className: 'variable',\n    variants: [\n      { begin: /\\$[\\w\\d\"][\\w\\d_]*/ },\n      { begin: /\\$\\{(.*?)\\}/ }\n    ]\n  };\n  const LITERALS = {\n    className: 'literal',\n    begin: /\\bon|off|true|false|yes|no\\b/\n  };\n  const STRINGS = {\n    className: \"string\",\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: \"'''\",\n        end: \"'''\",\n        relevance: 10\n      },\n      {\n        begin: '\"\"\"',\n        end: '\"\"\"',\n        relevance: 10\n      },\n      {\n        begin: '\"',\n        end: '\"'\n      },\n      {\n        begin: \"'\",\n        end: \"'\"\n      }\n    ]\n  };\n  const ARRAY = {\n    begin: /\\[/,\n    end: /\\]/,\n    contains: [\n      COMMENTS,\n      LITERALS,\n      VARIABLES,\n      STRINGS,\n      NUMBERS,\n      'self'\n    ],\n    relevance: 0\n  };\n\n  const BARE_KEY = /[A-Za-z0-9_-]+/;\n  const QUOTED_KEY_DOUBLE_QUOTE = /\"(\\\\\"|[^\"])*\"/;\n  const QUOTED_KEY_SINGLE_QUOTE = /'[^']*'/;\n  const ANY_KEY = regex.either(\n    BARE_KEY, QUOTED_KEY_DOUBLE_QUOTE, QUOTED_KEY_SINGLE_QUOTE\n  );\n  const DOTTED_KEY = regex.concat(\n    ANY_KEY, '(\\\\s*\\\\.\\\\s*', ANY_KEY, ')*',\n    regex.lookahead(/\\s*=\\s*[^#\\s]/)\n  );\n\n  return {\n    name: 'TOML, also INI',\n    aliases: [ 'toml' ],\n    case_insensitive: true,\n    illegal: /\\S/,\n    contains: [\n      COMMENTS,\n      {\n        className: 'section',\n        begin: /\\[+/,\n        end: /\\]+/\n      },\n      {\n        begin: DOTTED_KEY,\n        className: 'attr',\n        starts: {\n          end: /$/,\n          contains: [\n            COMMENTS,\n            ARRAY,\n            LITERALS,\n            VARIABLES,\n            STRINGS,\n            NUMBERS\n          ]\n        }\n      }\n    ]\n  };\n}\n\nmodule.exports = ini;\n"],"names":["ini","hljs","regex","NUMBERS","COMMENTS","VARIABLES","LITERALS","STRINGS","ARRAY","BARE_KEY","QUOTED_KEY_DOUBLE_QUOTE","QUOTED_KEY_SINGLE_QUOTE","ANY_KEY","DOTTED_KEY","ini_1"],"mappings":";;;;AAQA,WAASA,EAAIC,GAAM;AACjB,UAAMC,IAAQD,EAAK,OACbE,IAAU;AAAA,MACd,WAAW;AAAA,MACX,WAAW;AAAA,MACX,UAAU;AAAA,QACR,EAAE,OAAO,uBAAwB;AAAA,QACjC,EAAE,OAAOF,EAAK,UAAW;AAAA,MAC1B;AAAA,IACL,GACQG,IAAWH,EAAK;AACtB,IAAAG,EAAS,WAAW;AAAA,MAClB;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACN;AAAA,MACD;AAAA,QACE,OAAO;AAAA,QACP,KAAK;AAAA,MACN;AAAA,IACL;AACE,UAAMC,IAAY;AAAA,MAChB,WAAW;AAAA,MACX,UAAU;AAAA,QACR,EAAE,OAAO,oBAAqB;AAAA,QAC9B,EAAE,OAAO,cAAe;AAAA,MACzB;AAAA,IACL,GACQC,IAAW;AAAA,MACf,WAAW;AAAA,MACX,OAAO;AAAA,IACX,GACQC,IAAU;AAAA,MACd,WAAW;AAAA,MACX,UAAU,CAAEN,EAAK,gBAAkB;AAAA,MACnC,UAAU;AAAA,QACR;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA,QACZ;AAAA,QACD;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,WAAW;AAAA,QACZ;AAAA,QACD;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,QACN;AAAA,QACD;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,QACN;AAAA,MACF;AAAA,IACL,GACQO,IAAQ;AAAA,MACZ,OAAO;AAAA,MACP,KAAK;AAAA,MACL,UAAU;AAAA,QACRJ;AAAA,QACAE;AAAA,QACAD;AAAA,QACAE;AAAA,QACAJ;AAAA,QACA;AAAA,MACD;AAAA,MACD,WAAW;AAAA,IACf,GAEQM,IAAW,kBACXC,IAA0B,iBAC1BC,IAA0B,WAC1BC,IAAUV,EAAM;AAAA,MACpBO;AAAA,MAAUC;AAAA,MAAyBC;AAAA,IACvC,GACQE,IAAaX,EAAM;AAAA,MACvBU;AAAA,MAAS;AAAA,MAAgBA;AAAA,MAAS;AAAA,MAClCV,EAAM,UAAU,eAAe;AAAA,IACnC;AAEE,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAE,MAAQ;AAAA,MACnB,kBAAkB;AAAA,MAClB,SAAS;AAAA,MACT,UAAU;AAAA,QACRE;AAAA,QACA;AAAA,UACE,WAAW;AAAA,UACX,OAAO;AAAA,UACP,KAAK;AAAA,QACN;AAAA,QACD;AAAA,UACE,OAAOS;AAAA,UACP,WAAW;AAAA,UACX,QAAQ;AAAA,YACN,KAAK;AAAA,YACL,UAAU;AAAA,cACRT;AAAA,cACAI;AAAA,cACAF;AAAA,cACAD;AAAA,cACAE;AAAA,cACAJ;AAAA,YACD;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACL;AAAA,EACC;AAED,SAAAW,IAAiBd;;","x_google_ignoreList":[0]}