{"version":3,"file":"lisp.mjs","sources":["../../../../../../../../../node_modules/.pnpm/highlight.js@11.10.0/node_modules/highlight.js/lib/languages/lisp.js"],"sourcesContent":["/*\nLanguage: Lisp\nDescription: Generic lisp syntax\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nCategory: lisp\n*/\n\nfunction lisp(hljs) {\n  const LISP_IDENT_RE = '[a-zA-Z_\\\\-+\\\\*\\\\/<=>&#][a-zA-Z0-9_\\\\-+*\\\\/<=>&#!]*';\n  const MEC_RE = '\\\\|[^]*?\\\\|';\n  const LISP_SIMPLE_NUMBER_RE = '(-|\\\\+)?\\\\d+(\\\\.\\\\d+|\\\\/\\\\d+)?((d|e|f|l|s|D|E|F|L|S)(\\\\+|-)?\\\\d+)?';\n  const LITERAL = {\n    className: 'literal',\n    begin: '\\\\b(t{1}|nil)\\\\b'\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      {\n        begin: LISP_SIMPLE_NUMBER_RE,\n        relevance: 0\n      },\n      { begin: '#(b|B)[0-1]+(/[0-1]+)?' },\n      { begin: '#(o|O)[0-7]+(/[0-7]+)?' },\n      { begin: '#(x|X)[0-9a-fA-F]+(/[0-9a-fA-F]+)?' },\n      {\n        begin: '#(c|C)\\\\(' + LISP_SIMPLE_NUMBER_RE + ' +' + LISP_SIMPLE_NUMBER_RE,\n        end: '\\\\)'\n      }\n    ]\n  };\n  const STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null });\n  const COMMENT = hljs.COMMENT(\n    ';', '$',\n    { relevance: 0 }\n  );\n  const VARIABLE = {\n    begin: '\\\\*',\n    end: '\\\\*'\n  };\n  const KEYWORD = {\n    className: 'symbol',\n    begin: '[:&]' + LISP_IDENT_RE\n  };\n  const IDENT = {\n    begin: LISP_IDENT_RE,\n    relevance: 0\n  };\n  const MEC = { begin: MEC_RE };\n  const QUOTED_LIST = {\n    begin: '\\\\(',\n    end: '\\\\)',\n    contains: [\n      'self',\n      LITERAL,\n      STRING,\n      NUMBER,\n      IDENT\n    ]\n  };\n  const QUOTED = {\n    contains: [\n      NUMBER,\n      STRING,\n      VARIABLE,\n      KEYWORD,\n      QUOTED_LIST,\n      IDENT\n    ],\n    variants: [\n      {\n        begin: '[\\'`]\\\\(',\n        end: '\\\\)'\n      },\n      {\n        begin: '\\\\(quote ',\n        end: '\\\\)',\n        keywords: { name: 'quote' }\n      },\n      { begin: '\\'' + MEC_RE }\n    ]\n  };\n  const QUOTED_ATOM = { variants: [\n    { begin: '\\'' + LISP_IDENT_RE },\n    { begin: '#\\'' + LISP_IDENT_RE + '(::' + LISP_IDENT_RE + ')*' }\n  ] };\n  const LIST = {\n    begin: '\\\\(\\\\s*',\n    end: '\\\\)'\n  };\n  const BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  LIST.contains = [\n    {\n      className: 'name',\n      variants: [\n        {\n          begin: LISP_IDENT_RE,\n          relevance: 0,\n        },\n        { begin: MEC_RE }\n      ]\n    },\n    BODY\n  ];\n  BODY.contains = [\n    QUOTED,\n    QUOTED_ATOM,\n    LIST,\n    LITERAL,\n    NUMBER,\n    STRING,\n    COMMENT,\n    VARIABLE,\n    KEYWORD,\n    MEC,\n    IDENT\n  ];\n\n  return {\n    name: 'Lisp',\n    illegal: /\\S/,\n    contains: [\n      NUMBER,\n      hljs.SHEBANG(),\n      LITERAL,\n      STRING,\n      COMMENT,\n      QUOTED,\n      QUOTED_ATOM,\n      LIST,\n      IDENT\n    ]\n  };\n}\n\nmodule.exports = lisp;\n"],"names":["lisp","hljs","LISP_IDENT_RE","MEC_RE","LISP_SIMPLE_NUMBER_RE","LITERAL","NUMBER","STRING","COMMENT","VARIABLE","KEYWORD","IDENT","MEC","QUOTED","QUOTED_ATOM","LIST","BODY","lisp_1"],"mappings":";;;;AAOA,WAASA,EAAKC,GAAM;AAClB,UAAMC,IAAgB,uDAChBC,IAAS,eACTC,IAAwB,sEACxBC,IAAU;AAAA,MACd,WAAW;AAAA,MACX,OAAO;AAAA,IACX,GACQC,IAAS;AAAA,MACb,WAAW;AAAA,MACX,UAAU;AAAA,QACR;AAAA,UACE,OAAOF;AAAA,UACP,WAAW;AAAA,QACZ;AAAA,QACD,EAAE,OAAO,yBAA0B;AAAA,QACnC,EAAE,OAAO,yBAA0B;AAAA,QACnC,EAAE,OAAO,qCAAsC;AAAA,QAC/C;AAAA,UACE,OAAO,cAAcA,IAAwB,OAAOA;AAAA,UACpD,KAAK;AAAA,QACN;AAAA,MACF;AAAA,IACL,GACQG,IAASN,EAAK,QAAQA,EAAK,mBAAmB,EAAE,SAAS,KAAI,CAAE,GAC/DO,IAAUP,EAAK;AAAA,MACnB;AAAA,MAAK;AAAA,MACL,EAAE,WAAW,EAAG;AAAA,IACpB,GACQQ,IAAW;AAAA,MACf,OAAO;AAAA,MACP,KAAK;AAAA,IACT,GACQC,IAAU;AAAA,MACd,WAAW;AAAA,MACX,OAAO,SAASR;AAAA,IACpB,GACQS,IAAQ;AAAA,MACZ,OAAOT;AAAA,MACP,WAAW;AAAA,IACf,GACQU,IAAM,EAAE,OAAOT,KAYfU,IAAS;AAAA,MACb,UAAU;AAAA,QACRP;AAAA,QACAC;AAAA,QACAE;AAAA,QACAC;AAAA,QAhBgB;AAAA,UAClB,OAAO;AAAA,UACP,KAAK;AAAA,UACL,UAAU;AAAA,YACR;AAAA,YACAL;AAAA,YACAE;AAAA,YACAD;AAAA,YACAK;AAAA,UACD;AAAA,QACL;AAAA,QAQMA;AAAA,MACD;AAAA,MACD,UAAU;AAAA,QACR;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,QACN;AAAA,QACD;AAAA,UACE,OAAO;AAAA,UACP,KAAK;AAAA,UACL,UAAU,EAAE,MAAM,QAAS;AAAA,QAC5B;AAAA,QACD,EAAE,OAAO,MAAOR,EAAQ;AAAA,MACzB;AAAA,IACL,GACQW,IAAc,EAAE,UAAU;AAAA,MAC9B,EAAE,OAAO,MAAOZ,EAAe;AAAA,MAC/B,EAAE,OAAO,OAAQA,IAAgB,QAAQA,IAAgB,KAAM;AAAA,IACnE,KACQa,IAAO;AAAA,MACX,OAAO;AAAA,MACP,KAAK;AAAA,IACT,GACQC,IAAO;AAAA,MACX,gBAAgB;AAAA,MAChB,WAAW;AAAA,IACf;AACE,WAAAD,EAAK,WAAW;AAAA,MACd;AAAA,QACE,WAAW;AAAA,QACX,UAAU;AAAA,UACR;AAAA,YACE,OAAOb;AAAA,YACP,WAAW;AAAA,UACZ;AAAA,UACD,EAAE,OAAOC,EAAQ;AAAA,QAClB;AAAA,MACF;AAAA,MACDa;AAAA,IACJ,GACEA,EAAK,WAAW;AAAA,MACdH;AAAA,MACAC;AAAA,MACAC;AAAA,MACAV;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,MACAC;AAAA,MACAE;AAAA,MACAD;AAAA,IACJ,GAES;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,MACT,UAAU;AAAA,QACRL;AAAA,QACAL,EAAK,QAAS;AAAA,QACdI;AAAA,QACAE;AAAA,QACAC;AAAA,QACAK;AAAA,QACAC;AAAA,QACAC;AAAA,QACAJ;AAAA,MACD;AAAA,IACL;AAAA,EACC;AAED,SAAAM,IAAiBjB;;","x_google_ignoreList":[0]}