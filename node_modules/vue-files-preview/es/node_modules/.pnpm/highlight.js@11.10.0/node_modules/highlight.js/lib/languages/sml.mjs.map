{"version":3,"file":"sml.mjs","sources":["../../../../../../../../../node_modules/.pnpm/highlight.js@11.10.0/node_modules/highlight.js/lib/languages/sml.js"],"sourcesContent":["/*\nLanguage: SML (Standard ML)\nAuthor: Edwin Dalorzo <edwin@dalorzo.org>\nDescription: SML language definition.\nWebsite: https://www.smlnj.org\nOrigin: ocaml.js\nCategory: functional\n*/\nfunction sml(hljs) {\n  return {\n    name: 'SML (Standard ML)',\n    aliases: [ 'ml' ],\n    keywords: {\n      $pattern: '[a-z_]\\\\w*!?',\n      keyword:\n        /* according to Definition of Standard ML 97  */\n        'abstype and andalso as case datatype do else end eqtype '\n        + 'exception fn fun functor handle if in include infix infixr '\n        + 'let local nonfix of op open orelse raise rec sharing sig '\n        + 'signature struct structure then type val with withtype where while',\n      built_in:\n        /* built-in types according to basis library */\n        'array bool char exn int list option order real ref string substring vector unit word',\n      literal:\n        'true false NONE SOME LESS EQUAL GREATER nil'\n    },\n    illegal: /\\/\\/|>>/,\n    contains: [\n      {\n        className: 'literal',\n        begin: /\\[(\\|\\|)?\\]|\\(\\)/,\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        { contains: [ 'self' ] }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'type',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with ' */\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*' },\n      hljs.inherit(hljs.APOS_STRING_MODE, {\n        className: 'string',\n        relevance: 0\n      }),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, { illegal: null }),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|'\n          + '0[oO][0-7_]+[Lln]?|'\n          + '0[bB][01_]+[Lln]?|'\n          + '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      { begin: /[-=]>/ // relevance booster\n      }\n    ]\n  };\n}\n\nmodule.exports = sml;\n"],"names":["sml","hljs","sml_1"],"mappings":";;;;AAQA,WAASA,EAAIC,GAAM;AACjB,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAE,IAAM;AAAA,MACjB,UAAU;AAAA,QACR,UAAU;AAAA,QACV;AAAA;AAAA,UAEE;AAAA;AAAA,QAIF;AAAA;AAAA,UAEE;AAAA;AAAA,QACF,SACE;AAAA,MACH;AAAA,MACD,SAAS;AAAA,MACT,UAAU;AAAA,QACR;AAAA,UACE,WAAW;AAAA,UACX,OAAO;AAAA,UACP,WAAW;AAAA,QACZ;AAAA,QACDA,EAAK;AAAA,UACH;AAAA,UACA;AAAA,UACA,EAAE,UAAU,CAAE,QAAU;AAAA,QACzB;AAAA,QACD;AAAA;AAAA,UACE,WAAW;AAAA,UACX,OAAO;AAAA;AAAA,QAER;AAAA,QACD;AAAA;AAAA,UACE,WAAW;AAAA,UACX,OAAO;AAAA,QACR;AAAA,QACD;AAAA;AAAA,UACE,WAAW;AAAA,UACX,OAAO;AAAA,UACP,WAAW;AAAA,QACZ;AAAA,QACD;AAAA;AAAA,UACE,OAAO;AAAA,QAAwB;AAAA,QACjCA,EAAK,QAAQA,EAAK,kBAAkB;AAAA,UAClC,WAAW;AAAA,UACX,WAAW;AAAA,QACnB,CAAO;AAAA,QACDA,EAAK,QAAQA,EAAK,mBAAmB,EAAE,SAAS,MAAM;AAAA,QACtD;AAAA,UACE,WAAW;AAAA,UACX,OACE;AAAA,UAIF,WAAW;AAAA,QACZ;AAAA,QACD;AAAA,UAAE,OAAO;AAAA;AAAA,QACR;AAAA,MACF;AAAA,IACL;AAAA,EACC;AAED,SAAAC,IAAiBF;;","x_google_ignoreList":[0]}