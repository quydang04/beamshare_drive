{"version":3,"file":"json.mjs","sources":["../../../../../../../../../node_modules/.pnpm/highlight.js@11.10.0/node_modules/highlight.js/lib/languages/json.js"],"sourcesContent":["/*\nLanguage: JSON\nDescription: JSON (JavaScript Object Notation) is a lightweight data-interchange format.\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nWebsite: http://www.json.org\nCategory: common, protocols, web\n*/\n\nfunction json(hljs) {\n  const ATTRIBUTE = {\n    className: 'attr',\n    begin: /\"(\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    relevance: 1.01\n  };\n  const PUNCTUATION = {\n    match: /[{}[\\],:]/,\n    className: \"punctuation\",\n    relevance: 0\n  };\n  const LITERALS = [\n    \"true\",\n    \"false\",\n    \"null\"\n  ];\n  // NOTE: normally we would rely on `keywords` for this but using a mode here allows us\n  // - to use the very tight `illegal: \\S` rule later to flag any other character\n  // - as illegal indicating that despite looking like JSON we do not truly have\n  // - JSON and thus improve false-positively greatly since JSON will try and claim\n  // - all sorts of JSON looking stuff\n  const LITERALS_MODE = {\n    scope: \"literal\",\n    beginKeywords: LITERALS.join(\" \"),\n  };\n\n  return {\n    name: 'JSON',\n    aliases: ['jsonc'],\n    keywords:{\n      literal: LITERALS,\n    },\n    contains: [\n      ATTRIBUTE,\n      PUNCTUATION,\n      hljs.QUOTE_STRING_MODE,\n      LITERALS_MODE,\n      hljs.C_NUMBER_MODE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ],\n    illegal: '\\\\S'\n  };\n}\n\nmodule.exports = json;\n"],"names":["json","hljs","ATTRIBUTE","PUNCTUATION","LITERALS","LITERALS_MODE","json_1"],"mappings":";;;;AAQA,WAASA,EAAKC,GAAM;AAClB,UAAMC,IAAY;AAAA,MAChB,WAAW;AAAA,MACX,OAAO;AAAA,MACP,WAAW;AAAA,IACf,GACQC,IAAc;AAAA,MAClB,OAAO;AAAA,MACP,WAAW;AAAA,MACX,WAAW;AAAA,IACf,GACQC,IAAW;AAAA,MACf;AAAA,MACA;AAAA,MACA;AAAA,IACJ,GAMQC,IAAgB;AAAA,MACpB,OAAO;AAAA,MACP,eAAeD,EAAS,KAAK,GAAG;AAAA,IACpC;AAEE,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAC,OAAO;AAAA,MACjB,UAAS;AAAA,QACP,SAASA;AAAA,MACV;AAAA,MACD,UAAU;AAAA,QACRF;AAAA,QACAC;AAAA,QACAF,EAAK;AAAA,QACLI;AAAA,QACAJ,EAAK;AAAA,QACLA,EAAK;AAAA,QACLA,EAAK;AAAA,MACN;AAAA,MACD,SAAS;AAAA,IACb;AAAA,EACC;AAED,SAAAK,IAAiBN;;","x_google_ignoreList":[0]}