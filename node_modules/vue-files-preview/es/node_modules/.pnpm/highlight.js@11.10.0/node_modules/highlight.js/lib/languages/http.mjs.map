{"version":3,"file":"http.mjs","sources":["../../../../../../../../../node_modules/.pnpm/highlight.js@11.10.0/node_modules/highlight.js/lib/languages/http.js"],"sourcesContent":["/*\nLanguage: HTTP\nDescription: HTTP request and response headers with automatic body highlighting\nAuthor: Ivan Sagalaev <maniac@softwaremaniacs.org>\nCategory: protocols, web\nWebsite: https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview\n*/\n\nfunction http(hljs) {\n  const regex = hljs.regex;\n  const VERSION = 'HTTP/([32]|1\\\\.[01])';\n  const HEADER_NAME = /[A-Za-z][A-Za-z0-9-]*/;\n  const HEADER = {\n    className: 'attribute',\n    begin: regex.concat('^', HEADER_NAME, '(?=\\\\:\\\\s)'),\n    starts: { contains: [\n      {\n        className: \"punctuation\",\n        begin: /: /,\n        relevance: 0,\n        starts: {\n          end: '$',\n          relevance: 0\n        }\n      }\n    ] }\n  };\n  const HEADERS_AND_BODY = [\n    HEADER,\n    {\n      begin: '\\\\n\\\\n',\n      starts: {\n        subLanguage: [],\n        endsWithParent: true\n      }\n    }\n  ];\n\n  return {\n    name: 'HTTP',\n    aliases: [ 'https' ],\n    illegal: /\\S/,\n    contains: [\n      // response\n      {\n        begin: '^(?=' + VERSION + \" \\\\d{3})\",\n        end: /$/,\n        contains: [\n          {\n            className: \"meta\",\n            begin: VERSION\n          },\n          {\n            className: 'number',\n            begin: '\\\\b\\\\d{3}\\\\b'\n          }\n        ],\n        starts: {\n          end: /\\b\\B/,\n          illegal: /\\S/,\n          contains: HEADERS_AND_BODY\n        }\n      },\n      // request\n      {\n        begin: '(?=^[A-Z]+ (.*?) ' + VERSION + '$)',\n        end: /$/,\n        contains: [\n          {\n            className: 'string',\n            begin: ' ',\n            end: ' ',\n            excludeBegin: true,\n            excludeEnd: true\n          },\n          {\n            className: \"meta\",\n            begin: VERSION\n          },\n          {\n            className: 'keyword',\n            begin: '[A-Z]+'\n          }\n        ],\n        starts: {\n          end: /\\b\\B/,\n          illegal: /\\S/,\n          contains: HEADERS_AND_BODY\n        }\n      },\n      // to allow headers to work even without a preamble\n      hljs.inherit(HEADER, { relevance: 0 })\n    ]\n  };\n}\n\nmodule.exports = http;\n"],"names":["http","hljs","regex","VERSION","HEADER_NAME","HEADER","HEADERS_AND_BODY","http_1"],"mappings":";;;;AAQA,WAASA,EAAKC,GAAM;AAClB,UAAMC,IAAQD,EAAK,OACbE,IAAU,wBACVC,IAAc,yBACdC,IAAS;AAAA,MACb,WAAW;AAAA,MACX,OAAOH,EAAM,OAAO,KAAKE,GAAa,YAAY;AAAA,MAClD,QAAQ,EAAE,UAAU;AAAA,QAClB;AAAA,UACE,WAAW;AAAA,UACX,OAAO;AAAA,UACP,WAAW;AAAA,UACX,QAAQ;AAAA,YACN,KAAK;AAAA,YACL,WAAW;AAAA,UACZ;AAAA,QACF;AAAA,MACP,EAAO;AAAA,IACP,GACQE,IAAmB;AAAA,MACvBD;AAAA,MACA;AAAA,QACE,OAAO;AAAA,QACP,QAAQ;AAAA,UACN,aAAa,CAAE;AAAA,UACf,gBAAgB;AAAA,QACjB;AAAA,MACF;AAAA,IACL;AAEE,WAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAE,OAAS;AAAA,MACpB,SAAS;AAAA,MACT,UAAU;AAAA;AAAA,QAER;AAAA,UACE,OAAO,SAASF,IAAU;AAAA,UAC1B,KAAK;AAAA,UACL,UAAU;AAAA,YACR;AAAA,cACE,WAAW;AAAA,cACX,OAAOA;AAAA,YACR;AAAA,YACD;AAAA,cACE,WAAW;AAAA,cACX,OAAO;AAAA,YACR;AAAA,UACF;AAAA,UACD,QAAQ;AAAA,YACN,KAAK;AAAA,YACL,SAAS;AAAA,YACT,UAAUG;AAAA,UACX;AAAA,QACF;AAAA;AAAA,QAED;AAAA,UACE,OAAO,sBAAsBH,IAAU;AAAA,UACvC,KAAK;AAAA,UACL,UAAU;AAAA,YACR;AAAA,cACE,WAAW;AAAA,cACX,OAAO;AAAA,cACP,KAAK;AAAA,cACL,cAAc;AAAA,cACd,YAAY;AAAA,YACb;AAAA,YACD;AAAA,cACE,WAAW;AAAA,cACX,OAAOA;AAAA,YACR;AAAA,YACD;AAAA,cACE,WAAW;AAAA,cACX,OAAO;AAAA,YACR;AAAA,UACF;AAAA,UACD,QAAQ;AAAA,YACN,KAAK;AAAA,YACL,SAAS;AAAA,YACT,UAAUG;AAAA,UACX;AAAA,QACF;AAAA;AAAA,QAEDL,EAAK,QAAQI,GAAQ,EAAE,WAAW,EAAC,CAAE;AAAA,MACtC;AAAA,IACL;AAAA,EACC;AAED,SAAAE,IAAiBP;;","x_google_ignoreList":[0]}