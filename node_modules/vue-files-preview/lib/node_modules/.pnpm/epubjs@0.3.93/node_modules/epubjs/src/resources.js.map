{"version":3,"file":"resources.js","sources":["../../../../../../../../node_modules/.pnpm/epubjs@0.3.93/node_modules/epubjs/src/resources.js"],"sourcesContent":["import {substitute} from \"./utils/replacements\";\nimport {createBase64Url, createBlobUrl, blob2base64} from \"./utils/core\";\nimport Url from \"./utils/url\";\nimport mime from \"./utils/mime\";\nimport Path from \"./utils/path\";\nimport path from \"path-webpack\";\n\n/**\n * Handle Package Resources\n * @class\n * @param {Manifest} manifest\n * @param {object} [options]\n * @param {string} [options.replacements=\"base64\"]\n * @param {Archive} [options.archive]\n * @param {method} [options.resolver]\n */\nclass Resources {\n\tconstructor(manifest, options) {\n\t\tthis.settings = {\n\t\t\treplacements: (options && options.replacements) || \"base64\",\n\t\t\tarchive: (options && options.archive),\n\t\t\tresolver: (options && options.resolver),\n\t\t\trequest: (options && options.request)\n\t\t};\n\n\t\tthis.process(manifest);\n\t}\n\n\t/**\n\t * Process resources\n\t * @param {Manifest} manifest\n\t */\n\tprocess(manifest){\n\t\tthis.manifest = manifest;\n\t\tthis.resources = Object.keys(manifest).\n\t\t\tmap(function (key){\n\t\t\t\treturn manifest[key];\n\t\t\t});\n\n\t\tthis.replacementUrls = [];\n\n\t\tthis.html = [];\n\t\tthis.assets = [];\n\t\tthis.css = [];\n\n\t\tthis.urls = [];\n\t\tthis.cssUrls = [];\n\n\t\tthis.split();\n\t\tthis.splitUrls();\n\t}\n\n\t/**\n\t * Split resources by type\n\t * @private\n\t */\n\tsplit(){\n\n\t\t// HTML\n\t\tthis.html = this.resources.\n\t\t\tfilter(function (item){\n\t\t\t\tif (item.type === \"application/xhtml+xml\" ||\n\t\t\t\t\t\titem.type === \"text/html\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Exclude HTML\n\t\tthis.assets = this.resources.\n\t\t\tfilter(function (item){\n\t\t\t\tif (item.type !== \"application/xhtml+xml\" &&\n\t\t\t\t\t\titem.type !== \"text/html\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Only CSS\n\t\tthis.css = this.resources.\n\t\t\tfilter(function (item){\n\t\t\t\tif (item.type === \"text/css\") {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/**\n\t * Convert split resources into Urls\n\t * @private\n\t */\n\tsplitUrls(){\n\n\t\t// All Assets Urls\n\t\tthis.urls = this.assets.\n\t\t\tmap(function(item) {\n\t\t\t\treturn item.href;\n\t\t\t}.bind(this));\n\n\t\t// Css Urls\n\t\tthis.cssUrls = this.css.map(function(item) {\n\t\t\treturn item.href;\n\t\t});\n\n\t}\n\n\t/**\n\t * Create a url to a resource\n\t * @param {string} url\n\t * @return {Promise<string>} Promise resolves with url string\n\t */\n\tcreateUrl (url) {\n\t\tvar parsedUrl = new Url(url);\n\t\tvar mimeType = mime.lookup(parsedUrl.filename);\n\n\t\tif (this.settings.archive) {\n\t\t\treturn this.settings.archive.createUrl(url, {\"base64\": (this.settings.replacements === \"base64\")});\n\t\t} else {\n\t\t\tif (this.settings.replacements === \"base64\") {\n\t\t\t\treturn this.settings.request(url, 'blob')\n\t\t\t\t\t.then((blob) => {\n\t\t\t\t\t\treturn blob2base64(blob);\n\t\t\t\t\t})\n\t\t\t\t\t.then((blob) => {\n\t\t\t\t\t\treturn createBase64Url(blob, mimeType);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn this.settings.request(url, 'blob').then((blob) => {\n\t\t\t\t\treturn createBlobUrl(blob, mimeType);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Create blob urls for all the assets\n\t * @return {Promise}         returns replacement urls\n\t */\n\treplacements(){\n\t\tif (this.settings.replacements === \"none\") {\n\t\t\treturn new Promise(function(resolve) {\n\t\t\t\tresolve(this.urls);\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tvar replacements = this.urls.map( (url) => {\n\t\t\t\tvar absolute = this.settings.resolver(url);\n\n\t\t\t\treturn this.createUrl(absolute).\n\t\t\t\t\tcatch((err) => {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t});\n\t\t\t});\n\n\t\treturn Promise.all(replacements)\n\t\t\t.then( (replacementUrls) => {\n\t\t\t\tthis.replacementUrls = replacementUrls.filter((url) => {\n\t\t\t\t\treturn (typeof(url) === \"string\");\n\t\t\t\t});\n\t\t\t\treturn replacementUrls;\n\t\t\t});\n\t}\n\n\t/**\n\t * Replace URLs in CSS resources\n\t * @private\n\t * @param  {Archive} [archive]\n\t * @param  {method} [resolver]\n\t * @return {Promise}\n\t */\n\treplaceCss(archive, resolver){\n\t\tvar replaced = [];\n\t\tarchive = archive || this.settings.archive;\n\t\tresolver = resolver || this.settings.resolver;\n\t\tthis.cssUrls.forEach(function(href) {\n\t\t\tvar replacement = this.createCssFile(href, archive, resolver)\n\t\t\t\t.then(function (replacementUrl) {\n\t\t\t\t\t// switch the url in the replacementUrls\n\t\t\t\t\tvar indexInUrls = this.urls.indexOf(href);\n\t\t\t\t\tif (indexInUrls > -1) {\n\t\t\t\t\t\tthis.replacementUrls[indexInUrls] = replacementUrl;\n\t\t\t\t\t}\n\t\t\t\t}.bind(this))\n\n\n\t\t\treplaced.push(replacement);\n\t\t}.bind(this));\n\t\treturn Promise.all(replaced);\n\t}\n\n\t/**\n\t * Create a new CSS file with the replaced URLs\n\t * @private\n\t * @param  {string} href the original css file\n\t * @return {Promise}  returns a BlobUrl to the new CSS file or a data url\n\t */\n\tcreateCssFile(href){\n\t\tvar newUrl;\n\n\t\tif (path.isAbsolute(href)) {\n\t\t\treturn new Promise(function(resolve){\n\t\t\t\tresolve();\n\t\t\t});\n\t\t}\n\n\t\tvar absolute = this.settings.resolver(href);\n\n\t\t// Get the text of the css file from the archive\n\t\tvar textResponse;\n\n\t\tif (this.settings.archive) {\n\t\t\ttextResponse = this.settings.archive.getText(absolute);\n\t\t} else {\n\t\t\ttextResponse = this.settings.request(absolute, \"text\");\n\t\t}\n\n\t\t// Get asset links relative to css file\n\t\tvar relUrls = this.urls.map( (assetHref) => {\n\t\t\tvar resolved = this.settings.resolver(assetHref);\n\t\t\tvar relative = new Path(absolute).relative(resolved);\n\n\t\t\treturn relative;\n\t\t});\n\n\t\tif (!textResponse) {\n\t\t\t// file not found, don't replace\n\t\t\treturn new Promise(function(resolve){\n\t\t\t\tresolve();\n\t\t\t});\n\t\t}\n\n\t\treturn textResponse.then( (text) => {\n\t\t\t// Replacements in the css text\n\t\t\ttext = substitute(text, relUrls, this.replacementUrls);\n\n\t\t\t// Get the new url\n\t\t\tif (this.settings.replacements === \"base64\") {\n\t\t\t\tnewUrl = createBase64Url(text, \"text/css\");\n\t\t\t} else {\n\t\t\t\tnewUrl = createBlobUrl(text, \"text/css\");\n\t\t\t}\n\n\t\t\treturn newUrl;\n\t\t}, (err) => {\n\t\t\t// handle response errors\n\t\t\treturn new Promise(function(resolve){\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\n\t}\n\n\t/**\n\t * Resolve all resources URLs relative to an absolute URL\n\t * @param  {string} absolute to be resolved to\n\t * @param  {resolver} [resolver]\n\t * @return {string[]} array with relative Urls\n\t */\n\trelativeTo(absolute, resolver){\n\t\tresolver = resolver || this.settings.resolver;\n\n\t\t// Get Urls relative to current sections\n\t\treturn this.urls.\n\t\t\tmap(function(href) {\n\t\t\t\tvar resolved = resolver(href);\n\t\t\t\tvar relative = new Path(absolute).relative(resolved);\n\t\t\t\treturn relative;\n\t\t\t}.bind(this));\n\t}\n\n\t/**\n\t * Get a URL for a resource\n\t * @param  {string} path\n\t * @return {string} url\n\t */\n\tget(path) {\n\t\tvar indexInUrls = this.urls.indexOf(path);\n\t\tif (indexInUrls === -1) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.replacementUrls.length) {\n\t\t\treturn new Promise(function(resolve, reject) {\n\t\t\t\tresolve(this.replacementUrls[indexInUrls]);\n\t\t\t}.bind(this));\n\t\t} else {\n\t\t\treturn this.createUrl(path);\n\t\t}\n\t}\n\n\t/**\n\t * Substitute urls in content, with replacements,\n\t * relative to a url if provided\n\t * @param  {string} content\n\t * @param  {string} [url]   url to resolve to\n\t * @return {string}         content with urls substituted\n\t */\n\tsubstitute(content, url) {\n\t\tvar relUrls;\n\t\tif (url) {\n\t\t\trelUrls = this.relativeTo(url);\n\t\t} else {\n\t\t\trelUrls = this.urls;\n\t\t}\n\t\treturn substitute(content, relUrls, this.replacementUrls);\n\t}\n\n\tdestroy() {\n\t\tthis.settings = undefined;\n\t\tthis.manifest = undefined;\n\t\tthis.resources = undefined;\n\t\tthis.replacementUrls = undefined;\n\t\tthis.html = undefined;\n\t\tthis.assets = undefined;\n\t\tthis.css = undefined;\n\n\t\tthis.urls = undefined;\n\t\tthis.cssUrls = undefined;\n\t}\n}\n\nexport default Resources;\n"],"names":["Resources","manifest","options","key","item","url","parsedUrl","Url","mimeType","mime","blob","blob2base64","createBase64Url","createBlobUrl","resolve","replacements","absolute","err","replacementUrls","archive","resolver","replaced","href","replacement","replacementUrl","indexInUrls","newUrl","path","textResponse","relUrls","assetHref","resolved","relative","Path","text","substitute","reject","content"],"mappings":"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","x_google_ignoreList":[0]}