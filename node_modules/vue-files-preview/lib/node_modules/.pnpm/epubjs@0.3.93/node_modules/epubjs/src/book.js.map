{"version":3,"file":"book.js","sources":["../../../../../../../../node_modules/.pnpm/epubjs@0.3.93/node_modules/epubjs/src/book.js"],"sourcesContent":["import EventEmitter from \"event-emitter\";\nimport {extend, defer} from \"./utils/core\";\nimport Url from \"./utils/url\";\nimport Path from \"./utils/path\";\nimport Spine from \"./spine\";\nimport Locations from \"./locations\";\nimport Container from \"./container\";\nimport Packaging from \"./packaging\";\nimport Navigation from \"./navigation\";\nimport Resources from \"./resources\";\nimport PageList from \"./pagelist\";\nimport Rendition from \"./rendition\";\nimport Archive from \"./archive\";\nimport request from \"./utils/request\";\nimport EpubCFI from \"./epubcfi\";\nimport Store from \"./store\";\nimport DisplayOptions from \"./displayoptions\";\nimport { EPUBJS_VERSION, EVENTS } from \"./utils/constants\";\n\nconst CONTAINER_PATH = \"META-INF/container.xml\";\nconst IBOOKS_DISPLAY_OPTIONS_PATH = \"META-INF/com.apple.ibooks.display-options.xml\";\n\nconst INPUT_TYPE = {\n\tBINARY: \"binary\",\n\tBASE64: \"base64\",\n\tEPUB: \"epub\",\n\tOPF: \"opf\",\n\tMANIFEST: \"json\",\n\tDIRECTORY: \"directory\"\n};\n\n/**\n * An Epub representation with methods for the loading, parsing and manipulation\n * of its contents.\n * @class\n * @param {string} [url]\n * @param {object} [options]\n * @param {method} [options.requestMethod] a request function to use instead of the default\n * @param {boolean} [options.requestCredentials=undefined] send the xhr request withCredentials\n * @param {object} [options.requestHeaders=undefined] send the xhr request headers\n * @param {string} [options.encoding=binary] optional to pass 'binary' or base64' for archived Epubs\n * @param {string} [options.replacements=none] use base64, blobUrl, or none for replacing assets in archived Epubs\n * @param {method} [options.canonical] optional function to determine canonical urls for a path\n * @param {string} [options.openAs] optional string to determine the input type\n * @param {string} [options.store=false] cache the contents in local storage, value should be the name of the reader\n * @returns {Book}\n * @example new Book(\"/path/to/book.epub\", {})\n * @example new Book({ replacements: \"blobUrl\" })\n */\nclass Book {\n\tconstructor(url, options) {\n\t\t// Allow passing just options to the Book\n\t\tif (typeof(options) === \"undefined\" &&\n\t\t\t  typeof(url) !== \"string\" &&\n\t\t    url instanceof Blob === false &&\n\t\t    url instanceof ArrayBuffer === false) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\tthis.settings = extend(this.settings || {}, {\n\t\t\trequestMethod: undefined,\n\t\t\trequestCredentials: undefined,\n\t\t\trequestHeaders: undefined,\n\t\t\tencoding: undefined,\n\t\t\treplacements: undefined,\n\t\t\tcanonical: undefined,\n\t\t\topenAs: undefined,\n\t\t\tstore: undefined\n\t\t});\n\n\t\textend(this.settings, options);\n\n\n\t\t// Promises\n\t\tthis.opening = new defer();\n\t\t/**\n\t\t * @member {promise} opened returns after the book is loaded\n\t\t * @memberof Book\n\t\t */\n\t\tthis.opened = this.opening.promise;\n\t\tthis.isOpen = false;\n\n\t\tthis.loading = {\n\t\t\tmanifest: new defer(),\n\t\t\tspine: new defer(),\n\t\t\tmetadata: new defer(),\n\t\t\tcover: new defer(),\n\t\t\tnavigation: new defer(),\n\t\t\tpageList: new defer(),\n\t\t\tresources: new defer(),\n\t\t\tdisplayOptions: new defer()\n\t\t};\n\n\t\tthis.loaded = {\n\t\t\tmanifest: this.loading.manifest.promise,\n\t\t\tspine: this.loading.spine.promise,\n\t\t\tmetadata: this.loading.metadata.promise,\n\t\t\tcover: this.loading.cover.promise,\n\t\t\tnavigation: this.loading.navigation.promise,\n\t\t\tpageList: this.loading.pageList.promise,\n\t\t\tresources: this.loading.resources.promise,\n\t\t\tdisplayOptions: this.loading.displayOptions.promise\n\t\t};\n\n\t\t/**\n\t\t * @member {promise} ready returns after the book is loaded and parsed\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.ready = Promise.all([\n\t\t\tthis.loaded.manifest,\n\t\t\tthis.loaded.spine,\n\t\t\tthis.loaded.metadata,\n\t\t\tthis.loaded.cover,\n\t\t\tthis.loaded.navigation,\n\t\t\tthis.loaded.resources,\n\t\t\tthis.loaded.displayOptions\n\t\t]);\n\n\n\t\t// Queue for methods used before opening\n\t\tthis.isRendered = false;\n\t\t// this._q = queue(this);\n\n\t\t/**\n\t\t * @member {method} request\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.request = this.settings.requestMethod || request;\n\n\t\t/**\n\t\t * @member {Spine} spine\n\t\t * @memberof Book\n\t\t */\n\t\tthis.spine = new Spine();\n\n\t\t/**\n\t\t * @member {Locations} locations\n\t\t * @memberof Book\n\t\t */\n\t\tthis.locations = new Locations(this.spine, this.load.bind(this));\n\n\t\t/**\n\t\t * @member {Navigation} navigation\n\t\t * @memberof Book\n\t\t */\n\t\tthis.navigation = undefined;\n\n\t\t/**\n\t\t * @member {PageList} pagelist\n\t\t * @memberof Book\n\t\t */\n\t\tthis.pageList = undefined;\n\n\t\t/**\n\t\t * @member {Url} url\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.url = undefined;\n\n\t\t/**\n\t\t * @member {Path} path\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.path = undefined;\n\n\t\t/**\n\t\t * @member {boolean} archived\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.archived = false;\n\n\t\t/**\n\t\t * @member {Archive} archive\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.archive = undefined;\n\n\t\t/**\n\t\t * @member {Store} storage\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.storage = undefined;\n\n\t\t/**\n\t\t * @member {Resources} resources\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.resources = undefined;\n\n\t\t/**\n\t\t * @member {Rendition} rendition\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.rendition = undefined;\n\n\t\t/**\n\t\t * @member {Container} container\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.container = undefined;\n\n\t\t/**\n\t\t * @member {Packaging} packaging\n\t\t * @memberof Book\n\t\t * @private\n\t\t */\n\t\tthis.packaging = undefined;\n\n\t\t/**\n\t\t * @member {DisplayOptions} displayOptions\n\t\t * @memberof DisplayOptions\n\t\t * @private\n\t\t */\n\t\tthis.displayOptions = undefined;\n\n\t\t// this.toc = undefined;\n\t\tif (this.settings.store) {\n\t\t\tthis.store(this.settings.store);\n\t\t}\n\n\t\tif(url) {\n\t\t\tthis.open(url, this.settings.openAs).catch((error) => {\n\t\t\t\tvar err = new Error(\"Cannot load book at \"+ url );\n\t\t\t\tthis.emit(EVENTS.BOOK.OPEN_FAILED, err);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Open a epub or url\n\t * @param {string | ArrayBuffer} input Url, Path or ArrayBuffer\n\t * @param {string} [what=\"binary\", \"base64\", \"epub\", \"opf\", \"json\", \"directory\"] force opening as a certain type\n\t * @returns {Promise} of when the book has been loaded\n\t * @example book.open(\"/path/to/book.epub\")\n\t */\n\topen(input, what) {\n\t\tvar opening;\n\t\tvar type = what || this.determineType(input);\n\n\t\tif (type === INPUT_TYPE.BINARY) {\n\t\t\tthis.archived = true;\n\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\topening = this.openEpub(input);\n\t\t} else if (type === INPUT_TYPE.BASE64) {\n\t\t\tthis.archived = true;\n\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\topening = this.openEpub(input, type);\n\t\t} else if (type === INPUT_TYPE.EPUB) {\n\t\t\tthis.archived = true;\n\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\topening = this.request(input, \"binary\", this.settings.requestCredentials, this.settings.requestHeaders)\n\t\t\t\t.then(this.openEpub.bind(this));\n\t\t} else if(type == INPUT_TYPE.OPF) {\n\t\t\tthis.url = new Url(input);\n\t\t\topening = this.openPackaging(this.url.Path.toString());\n\t\t} else if(type == INPUT_TYPE.MANIFEST) {\n\t\t\tthis.url = new Url(input);\n\t\t\topening = this.openManifest(this.url.Path.toString());\n\t\t} else {\n\t\t\tthis.url = new Url(input);\n\t\t\topening = this.openContainer(CONTAINER_PATH)\n\t\t\t\t.then(this.openPackaging.bind(this));\n\t\t}\n\n\t\treturn opening;\n\t}\n\n\t/**\n\t * Open an archived epub\n\t * @private\n\t * @param  {binary} data\n\t * @param  {string} [encoding]\n\t * @return {Promise}\n\t */\n\topenEpub(data, encoding) {\n\t\treturn this.unarchive(data, encoding || this.settings.encoding)\n\t\t\t.then(() => {\n\t\t\t\treturn this.openContainer(CONTAINER_PATH);\n\t\t\t})\n\t\t\t.then((packagePath) => {\n\t\t\t\treturn this.openPackaging(packagePath);\n\t\t\t});\n\t}\n\n\t/**\n\t * Open the epub container\n\t * @private\n\t * @param  {string} url\n\t * @return {string} packagePath\n\t */\n\topenContainer(url) {\n\t\treturn this.load(url)\n\t\t\t.then((xml) => {\n\t\t\t\tthis.container = new Container(xml);\n\t\t\t\treturn this.resolve(this.container.packagePath);\n\t\t\t});\n\t}\n\n\t/**\n\t * Open the Open Packaging Format Xml\n\t * @private\n\t * @param  {string} url\n\t * @return {Promise}\n\t */\n\topenPackaging(url) {\n\t\tthis.path = new Path(url);\n\t\treturn this.load(url)\n\t\t\t.then((xml) => {\n\t\t\t\tthis.packaging = new Packaging(xml);\n\t\t\t\treturn this.unpack(this.packaging);\n\t\t\t});\n\t}\n\n\t/**\n\t * Open the manifest JSON\n\t * @private\n\t * @param  {string} url\n\t * @return {Promise}\n\t */\n\topenManifest(url) {\n\t\tthis.path = new Path(url);\n\t\treturn this.load(url)\n\t\t\t.then((json) => {\n\t\t\t\tthis.packaging = new Packaging();\n\t\t\t\tthis.packaging.load(json);\n\t\t\t\treturn this.unpack(this.packaging);\n\t\t\t});\n\t}\n\n\t/**\n\t * Load a resource from the Book\n\t * @param  {string} path path to the resource to load\n\t * @return {Promise}     returns a promise with the requested resource\n\t */\n\tload(path) {\n\t\tvar resolved = this.resolve(path);\n\t\tif(this.archived) {\n\t\t\treturn this.archive.request(resolved);\n\t\t} else {\n\t\t\treturn this.request(resolved, null, this.settings.requestCredentials, this.settings.requestHeaders);\n\t\t}\n\t}\n\n\t/**\n\t * Resolve a path to it's absolute position in the Book\n\t * @param  {string} path\n\t * @param  {boolean} [absolute] force resolving the full URL\n\t * @return {string}          the resolved path string\n\t */\n\tresolve(path, absolute) {\n\t\tif (!path) {\n\t\t\treturn;\n\t\t}\n\t\tvar resolved = path;\n\t\tvar isAbsolute = (path.indexOf(\"://\") > -1);\n\n\t\tif (isAbsolute) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (this.path) {\n\t\t\tresolved = this.path.resolve(path);\n\t\t}\n\n\t\tif(absolute != false && this.url) {\n\t\t\tresolved = this.url.resolve(resolved);\n\t\t}\n\n\t\treturn resolved;\n\t}\n\n\t/**\n\t * Get a canonical link to a path\n\t * @param  {string} path\n\t * @return {string} the canonical path string\n\t */\n\tcanonical(path) {\n\t\tvar url = path;\n\n\t\tif (!path) {\n\t\t\treturn \"\";\n\t\t}\n\n\t\tif (this.settings.canonical) {\n\t\t\turl = this.settings.canonical(path);\n\t\t} else {\n\t\t\turl = this.resolve(path, true);\n\t\t}\n\n\t\treturn url;\n\t}\n\n\t/**\n\t * Determine the type of they input passed to open\n\t * @private\n\t * @param  {string} input\n\t * @return {string}  binary | directory | epub | opf\n\t */\n\tdetermineType(input) {\n\t\tvar url;\n\t\tvar path;\n\t\tvar extension;\n\n\t\tif (this.settings.encoding === \"base64\") {\n\t\t\treturn INPUT_TYPE.BASE64;\n\t\t}\n\n\t\tif(typeof(input) != \"string\") {\n\t\t\treturn INPUT_TYPE.BINARY;\n\t\t}\n\n\t\turl = new Url(input);\n\t\tpath = url.path();\n\t\textension = path.extension;\n\n\t\t// If there's a search string, remove it before determining type\n\t\tif (extension) {\n\t\t\textension = extension.replace(/\\?.*$/, \"\");\n\t\t}\n\n\t\tif (!extension) {\n\t\t\treturn INPUT_TYPE.DIRECTORY;\n\t\t}\n\n\t\tif(extension === \"epub\"){\n\t\t\treturn INPUT_TYPE.EPUB;\n\t\t}\n\n\t\tif(extension === \"opf\"){\n\t\t\treturn INPUT_TYPE.OPF;\n\t\t}\n\n\t\tif(extension === \"json\"){\n\t\t\treturn INPUT_TYPE.MANIFEST;\n\t\t}\n\t}\n\n\n\t/**\n\t * unpack the contents of the Books packaging\n\t * @private\n\t * @param {Packaging} packaging object\n\t */\n\tunpack(packaging) {\n\t\tthis.package = packaging; //TODO: deprecated this\n\n\t\tif (this.packaging.metadata.layout === \"\") {\n\t\t\t// rendition:layout not set - check display options if book is pre-paginated\n\t\t\tthis.load(this.url.resolve(IBOOKS_DISPLAY_OPTIONS_PATH)).then((xml) => {\n\t\t\t\tthis.displayOptions = new DisplayOptions(xml);\n\t\t\t\tthis.loading.displayOptions.resolve(this.displayOptions);\n\t\t\t}).catch((err) => {\n\t\t\t\tthis.displayOptions = new DisplayOptions();\n\t\t\t\tthis.loading.displayOptions.resolve(this.displayOptions);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.displayOptions = new DisplayOptions();\n\t\t\tthis.loading.displayOptions.resolve(this.displayOptions);\n\t\t}\n\n\t\tthis.spine.unpack(this.packaging, this.resolve.bind(this), this.canonical.bind(this));\n\n\t\tthis.resources = new Resources(this.packaging.manifest, {\n\t\t\tarchive: this.archive,\n\t\t\tresolver: this.resolve.bind(this),\n\t\t\trequest: this.request.bind(this),\n\t\t\treplacements: this.settings.replacements || (this.archived ? \"blobUrl\" : \"base64\")\n\t\t});\n\n\t\tthis.loadNavigation(this.packaging).then(() => {\n\t\t\t// this.toc = this.navigation.toc;\n\t\t\tthis.loading.navigation.resolve(this.navigation);\n\t\t});\n\n\t\tif (this.packaging.coverPath) {\n\t\t\tthis.cover = this.resolve(this.packaging.coverPath);\n\t\t}\n\t\t// Resolve promises\n\t\tthis.loading.manifest.resolve(this.packaging.manifest);\n\t\tthis.loading.metadata.resolve(this.packaging.metadata);\n\t\tthis.loading.spine.resolve(this.spine);\n\t\tthis.loading.cover.resolve(this.cover);\n\t\tthis.loading.resources.resolve(this.resources);\n\t\tthis.loading.pageList.resolve(this.pageList);\n\n\t\tthis.isOpen = true;\n\n\t\tif(this.archived || this.settings.replacements && this.settings.replacements != \"none\") {\n\t\t\tthis.replacements().then(() => {\n\t\t\t\tthis.loaded.displayOptions.then(() => {\n\t\t\t\t\tthis.opening.resolve(this);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.error(err);\n\t\t\t});\n\t\t} else {\n\t\t\t// Resolve book opened promise\n\t\t\tthis.loaded.displayOptions.then(() => {\n\t\t\t\tthis.opening.resolve(this);\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * Load Navigation and PageList from package\n\t * @private\n\t * @param {Packaging} packaging\n\t */\n\tloadNavigation(packaging) {\n\t\tlet navPath = packaging.navPath || packaging.ncxPath;\n\t\tlet toc = packaging.toc;\n\n\t\t// From json manifest\n\t\tif (toc) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.navigation = new Navigation(toc);\n\n\t\t\t\tif (packaging.pageList) {\n\t\t\t\t\tthis.pageList = new PageList(packaging.pageList); // TODO: handle page lists from Manifest\n\t\t\t\t}\n\n\t\t\t\tresolve(this.navigation);\n\t\t\t});\n\t\t}\n\n\t\tif (!navPath) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.navigation = new Navigation();\n\t\t\t\tthis.pageList = new PageList();\n\n\t\t\t\tresolve(this.navigation);\n\t\t\t});\n\t\t}\n\n\t\treturn this.load(navPath, \"xml\")\n\t\t\t.then((xml) => {\n\t\t\t\tthis.navigation = new Navigation(xml);\n\t\t\t\tthis.pageList = new PageList(xml);\n\t\t\t\treturn this.navigation;\n\t\t\t});\n\t}\n\n\t/**\n\t * Gets a Section of the Book from the Spine\n\t * Alias for `book.spine.get`\n\t * @param {string} target\n\t * @return {Section}\n\t */\n\tsection(target) {\n\t\treturn this.spine.get(target);\n\t}\n\n\t/**\n\t * Sugar to render a book to an element\n\t * @param  {element | string} element element or string to add a rendition to\n\t * @param  {object} [options]\n\t * @return {Rendition}\n\t */\n\trenderTo(element, options) {\n\t\tthis.rendition = new Rendition(this, options);\n\t\tthis.rendition.attachTo(element);\n\n\t\treturn this.rendition;\n\t}\n\n\t/**\n\t * Set if request should use withCredentials\n\t * @param {boolean} credentials\n\t */\n\tsetRequestCredentials(credentials) {\n\t\tthis.settings.requestCredentials = credentials;\n\t}\n\n\t/**\n\t * Set headers request should use\n\t * @param {object} headers\n\t */\n\tsetRequestHeaders(headers) {\n\t\tthis.settings.requestHeaders = headers;\n\t}\n\n\t/**\n\t * Unarchive a zipped epub\n\t * @private\n\t * @param  {binary} input epub data\n\t * @param  {string} [encoding]\n\t * @return {Archive}\n\t */\n\tunarchive(input, encoding) {\n\t\tthis.archive = new Archive();\n\t\treturn this.archive.open(input, encoding);\n\t}\n\n\t/**\n\t * Store the epubs contents\n\t * @private\n\t * @param  {binary} input epub data\n\t * @param  {string} [encoding]\n\t * @return {Store}\n\t */\n\tstore(name) {\n\t\t// Use \"blobUrl\" or \"base64\" for replacements\n\t\tlet replacementsSetting = this.settings.replacements && this.settings.replacements !== \"none\";\n\t\t// Save original url\n\t\tlet originalUrl = this.url;\n\t\t// Save original request method\n\t\tlet requester = this.settings.requestMethod || request.bind(this);\n\t\t// Create new Store\n\t\tthis.storage = new Store(name, requester, this.resolve.bind(this));\n\t\t// Replace request method to go through store\n\t\tthis.request = this.storage.request.bind(this.storage);\n\n\t\tthis.opened.then(() => {\n\t\t\tif (this.archived) {\n\t\t\t\tthis.storage.requester = this.archive.request.bind(this.archive);\n\t\t\t}\n\t\t\t// Substitute hook\n\t\t\tlet substituteResources = (output, section) => {\n\t\t\t\tsection.output = this.resources.substitute(output, section.url);\n\t\t\t};\n\n\t\t\t// Set to use replacements\n\t\t\tthis.resources.settings.replacements = replacementsSetting || \"blobUrl\";\n\t\t\t// Create replacement urls\n\t\t\tthis.resources.replacements().\n\t\t\t\tthen(() => {\n\t\t\t\t\treturn this.resources.replaceCss();\n\t\t\t\t});\n\n\t\t\tthis.storage.on(\"offline\", () => {\n\t\t\t\t// Remove url to use relative resolving for hrefs\n\t\t\t\tthis.url = new Url(\"/\", \"\");\n\t\t\t\t// Add hook to replace resources in contents\n\t\t\t\tthis.spine.hooks.serialize.register(substituteResources);\n\t\t\t});\n\n\t\t\tthis.storage.on(\"online\", () => {\n\t\t\t\t// Restore original url\n\t\t\t\tthis.url = originalUrl;\n\t\t\t\t// Remove hook\n\t\t\t\tthis.spine.hooks.serialize.deregister(substituteResources);\n\t\t\t});\n\n\t\t});\n\n\t\treturn this.storage;\n\t}\n\n\t/**\n\t * Get the cover url\n\t * @return {Promise<?string>} coverUrl\n\t */\n\tcoverUrl() {\n\t\treturn this.loaded.cover.then(() => {\n\t\t\tif (!this.cover) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.archived) {\n\t\t\t\treturn this.archive.createUrl(this.cover);\n\t\t\t} else {\n\t\t\t\treturn this.cover;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Load replacement urls\n\t * @private\n\t * @return {Promise} completed loading urls\n\t */\n\treplacements() {\n\t\tthis.spine.hooks.serialize.register((output, section) => {\n\t\t\tsection.output = this.resources.substitute(output, section.url);\n\t\t});\n\n\t\treturn this.resources.replacements().\n\t\t\tthen(() => {\n\t\t\t\treturn this.resources.replaceCss();\n\t\t\t});\n\t}\n\n\t/**\n\t * Find a DOM Range for a given CFI Range\n\t * @param  {EpubCFI} cfiRange a epub cfi range\n\t * @return {Promise}\n\t */\n\tgetRange(cfiRange) {\n\t\tvar cfi = new EpubCFI(cfiRange);\n\t\tvar item = this.spine.get(cfi.spinePos);\n\t\tvar _request = this.load.bind(this);\n\t\tif (!item) {\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\treject(\"CFI could not be found\");\n\t\t\t});\n\t\t}\n\t\treturn item.load(_request).then(function (contents) {\n\t\t\tvar range = cfi.toRange(item.document);\n\t\t\treturn range;\n\t\t});\n\t}\n\n\t/**\n\t * Generates the Book Key using the identifier in the manifest or other string provided\n\t * @param  {string} [identifier] to use instead of metadata identifier\n\t * @return {string} key\n\t */\n\tkey(identifier) {\n\t\tvar ident = identifier || this.packaging.metadata.identifier || this.url.filename;\n\t\treturn `epubjs:${EPUBJS_VERSION}:${ident}`;\n\t}\n\n\t/**\n\t * Destroy the Book and all associated objects\n\t */\n\tdestroy() {\n\t\tthis.opened = undefined;\n\t\tthis.loading = undefined;\n\t\tthis.loaded = undefined;\n\t\tthis.ready = undefined;\n\n\t\tthis.isOpen = false;\n\t\tthis.isRendered = false;\n\n\t\tthis.spine && this.spine.destroy();\n\t\tthis.locations && this.locations.destroy();\n\t\tthis.pageList && this.pageList.destroy();\n\t\tthis.archive && this.archive.destroy();\n\t\tthis.resources && this.resources.destroy();\n\t\tthis.container && this.container.destroy();\n\t\tthis.packaging && this.packaging.destroy();\n\t\tthis.rendition && this.rendition.destroy();\n\t\tthis.displayOptions && this.displayOptions.destroy();\n\n\t\tthis.spine = undefined;\n\t\tthis.locations = undefined;\n\t\tthis.pageList = undefined;\n\t\tthis.archive = undefined;\n\t\tthis.resources = undefined;\n\t\tthis.container = undefined;\n\t\tthis.packaging = undefined;\n\t\tthis.rendition = undefined;\n\n\t\tthis.navigation = undefined;\n\t\tthis.url = undefined;\n\t\tthis.path = undefined;\n\t\tthis.archived = false;\n\t}\n\n}\n\n//-- Enable binding events to book\nEventEmitter(Book.prototype);\n\nexport default Book;\n"],"names":["CONTAINER_PATH","IBOOKS_DISPLAY_OPTIONS_PATH","INPUT_TYPE","Book","url","options","extend","defer","request","Spine","Locations","error","err","EVENTS","input","what","opening","type","Url","data","encoding","packagePath","xml","Container","Path","Packaging","json","path","resolved","absolute","isAbsolute","extension","packaging","DisplayOptions","Resources","navPath","toc","resolve","reject","Navigation","PageList","target","element","Rendition","credentials","headers","Archive","name","replacementsSetting","originalUrl","requester","Store","substituteResources","output","section","cfiRange","cfi","EpubCFI","item","_request","contents","range","identifier","ident","EPUBJS_VERSION","EventEmitter"],"mappings":"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","x_google_ignoreList":[0]}