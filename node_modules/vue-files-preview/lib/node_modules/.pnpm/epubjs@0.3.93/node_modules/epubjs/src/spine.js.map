{"version":3,"file":"spine.js","sources":["../../../../../../../../node_modules/.pnpm/epubjs@0.3.93/node_modules/epubjs/src/spine.js"],"sourcesContent":["import EpubCFI from \"./epubcfi\";\nimport Hook from \"./utils/hook\";\nimport Section from \"./section\";\nimport {replaceBase, replaceCanonical, replaceMeta} from \"./utils/replacements\";\n\n/**\n * A collection of Spine Items\n */\nclass Spine {\n\tconstructor() {\n\t\tthis.spineItems = [];\n\t\tthis.spineByHref = {};\n\t\tthis.spineById = {};\n\n\t\tthis.hooks = {};\n\t\tthis.hooks.serialize = new Hook();\n\t\tthis.hooks.content = new Hook();\n\n\t\t// Register replacements\n\t\tthis.hooks.content.register(replaceBase);\n\t\tthis.hooks.content.register(replaceCanonical);\n\t\tthis.hooks.content.register(replaceMeta);\n\n\t\tthis.epubcfi = new EpubCFI();\n\n\t\tthis.loaded = false;\n\n\t\tthis.items = undefined;\n\t\tthis.manifest = undefined;\n\t\tthis.spineNodeIndex = undefined;\n\t\tthis.baseUrl = undefined;\n\t\tthis.length = undefined;\n\t}\n\n\t/**\n\t * Unpack items from a opf into spine items\n\t * @param  {Packaging} _package\n\t * @param  {method} resolver URL resolver\n\t * @param  {method} canonical Resolve canonical url\n\t */\n\tunpack(_package, resolver, canonical) {\n\n\t\tthis.items = _package.spine;\n\t\tthis.manifest = _package.manifest;\n\t\tthis.spineNodeIndex = _package.spineNodeIndex;\n\t\tthis.baseUrl = _package.baseUrl || _package.basePath || \"\";\n\t\tthis.length = this.items.length;\n\n\t\tthis.items.forEach( (item, index) => {\n\t\t\tvar manifestItem = this.manifest[item.idref];\n\t\t\tvar spineItem;\n\n\t\t\titem.index = index;\n\t\t\titem.cfiBase = this.epubcfi.generateChapterComponent(this.spineNodeIndex, item.index, item.id);\n\n\t\t\tif (item.href) {\n\t\t\t\titem.url = resolver(item.href, true);\n\t\t\t\titem.canonical = canonical(item.href);\n\t\t\t}\n\n\t\t\tif(manifestItem) {\n\t\t\t\titem.href = manifestItem.href;\n\t\t\t\titem.url = resolver(item.href, true);\n\t\t\t\titem.canonical = canonical(item.href);\n\n\t\t\t\tif(manifestItem.properties.length){\n\t\t\t\t\titem.properties.push.apply(item.properties, manifestItem.properties);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (item.linear === \"yes\") {\n\t\t\t\titem.prev = function() {\n\t\t\t\t\tlet prevIndex = item.index;\n\t\t\t\t\twhile (prevIndex > 0) {\n\t\t\t\t\t\tlet prev = this.get(prevIndex-1);\n\t\t\t\t\t\tif (prev && prev.linear) {\n\t\t\t\t\t\t\treturn prev;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tprevIndex -= 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}.bind(this);\n\t\t\t\titem.next = function() {\n\t\t\t\t\tlet nextIndex = item.index;\n\t\t\t\t\twhile (nextIndex < this.spineItems.length-1) {\n\t\t\t\t\t\tlet next = this.get(nextIndex+1);\n\t\t\t\t\t\tif (next && next.linear) {\n\t\t\t\t\t\t\treturn next;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnextIndex += 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}.bind(this);\n\t\t\t} else {\n\t\t\t\titem.prev = function() {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\titem.next = function() {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tspineItem = new Section(item, this.hooks);\n\n\t\t\tthis.append(spineItem);\n\n\n\t\t});\n\n\t\tthis.loaded = true;\n\t}\n\n\t/**\n\t * Get an item from the spine\n\t * @param  {string|number} [target]\n\t * @return {Section} section\n\t * @example spine.get();\n\t * @example spine.get(1);\n\t * @example spine.get(\"chap1.html\");\n\t * @example spine.get(\"#id1234\");\n\t */\n\tget(target) {\n\t\tvar index = 0;\n\n\t\tif (typeof target === \"undefined\") {\n\t\t\twhile (index < this.spineItems.length) {\n\t\t\t\tlet next = this.spineItems[index];\n\t\t\t\tif (next && next.linear) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tindex += 1;\n\t\t\t}\n\t\t} else if(this.epubcfi.isCfiString(target)) {\n\t\t\tlet cfi = new EpubCFI(target);\n\t\t\tindex = cfi.spinePos;\n\t\t} else if(typeof target === \"number\" || isNaN(target) === false){\n\t\t\tindex = target;\n\t\t} else if(typeof target === \"string\" && target.indexOf(\"#\") === 0) {\n\t\t\tindex = this.spineById[target.substring(1)];\n\t\t} else if(typeof target === \"string\") {\n\t\t\t// Remove fragments\n\t\t\ttarget = target.split(\"#\")[0];\n\t\t\tindex = this.spineByHref[target] || this.spineByHref[encodeURI(target)];\n\t\t}\n\n\t\treturn this.spineItems[index] || null;\n\t}\n\n\t/**\n\t * Append a Section to the Spine\n\t * @private\n\t * @param  {Section} section\n\t */\n\tappend(section) {\n\t\tvar index = this.spineItems.length;\n\t\tsection.index = index;\n\n\t\tthis.spineItems.push(section);\n\n\t\t// Encode and Decode href lookups\n\t\t// see pr for details: https://github.com/futurepress/epub.js/pull/358\n\t\tthis.spineByHref[decodeURI(section.href)] = index;\n\t\tthis.spineByHref[encodeURI(section.href)] = index;\n\t\tthis.spineByHref[section.href] = index;\n\n\t\tthis.spineById[section.idref] = index;\n\n\t\treturn index;\n\t}\n\n\t/**\n\t * Prepend a Section to the Spine\n\t * @private\n\t * @param  {Section} section\n\t */\n\tprepend(section) {\n\t\t// var index = this.spineItems.unshift(section);\n\t\tthis.spineByHref[section.href] = 0;\n\t\tthis.spineById[section.idref] = 0;\n\n\t\t// Re-index\n\t\tthis.spineItems.forEach(function(item, index){\n\t\t\titem.index = index;\n\t\t});\n\n\t\treturn 0;\n\t}\n\n\t// insert(section, index) {\n\t//\n\t// };\n\n\t/**\n\t * Remove a Section from the Spine\n\t * @private\n\t * @param  {Section} section\n\t */\n\tremove(section) {\n\t\tvar index = this.spineItems.indexOf(section);\n\n\t\tif(index > -1) {\n\t\t\tdelete this.spineByHref[section.href];\n\t\t\tdelete this.spineById[section.idref];\n\n\t\t\treturn this.spineItems.splice(index, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Loop over the Sections in the Spine\n\t * @return {method} forEach\n\t */\n\teach() {\n\t\treturn this.spineItems.forEach.apply(this.spineItems, arguments);\n\t}\n\n\t/**\n\t * Find the first Section in the Spine\n\t * @return {Section} first section\n\t */\n\tfirst() {\n\t\tlet index = 0;\n\n\t\tdo {\n\t\t\tlet next = this.get(index);\n\n\t\t\tif (next && next.linear) {\n\t\t\t\treturn next;\n\t\t\t}\n\t\t\tindex += 1;\n\t\t} while (index < this.spineItems.length) ;\n\t}\n\n\t/**\n\t * Find the last Section in the Spine\n\t * @return {Section} last section\n\t */\n\tlast() {\n\t\tlet index = this.spineItems.length-1;\n\n\t\tdo {\n\t\t\tlet prev = this.get(index);\n\t\t\tif (prev && prev.linear) {\n\t\t\t\treturn prev;\n\t\t\t}\n\t\t\tindex -= 1;\n\t\t} while (index >= 0);\n\t}\n\n\tdestroy() {\n\t\tthis.each((section) => section.destroy());\n\n\t\tthis.spineItems = undefined\n\t\tthis.spineByHref = undefined\n\t\tthis.spineById = undefined\n\n\t\tthis.hooks.serialize.clear();\n\t\tthis.hooks.content.clear();\n\t\tthis.hooks = undefined;\n\n\t\tthis.epubcfi = undefined;\n\n\t\tthis.loaded = false;\n\n\t\tthis.items = undefined;\n\t\tthis.manifest = undefined;\n\t\tthis.spineNodeIndex = undefined;\n\t\tthis.baseUrl = undefined;\n\t\tthis.length = undefined;\n\t}\n}\n\nexport default Spine;\n"],"names":["Spine","Hook","replaceBase","replaceCanonical","replaceMeta","EpubCFI","_package","resolver","canonical","item","index","manifestItem","spineItem","prevIndex","prev","nextIndex","next","Section","target","section"],"mappings":"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","x_google_ignoreList":[0]}