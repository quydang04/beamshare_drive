{"version":3,"file":"themes.js","sources":["../../../../../../../../node_modules/.pnpm/epubjs@0.3.93/node_modules/epubjs/src/themes.js"],"sourcesContent":["import Url from \"./utils/url\";\n\n/**\n * Themes to apply to displayed content\n * @class\n * @param {Rendition} rendition\n */\nclass Themes {\n\tconstructor(rendition) {\n\t\tthis.rendition = rendition;\n\t\tthis._themes = {\n\t\t\t\"default\" : {\n\t\t\t\t\"rules\" : {},\n\t\t\t\t\"url\" : \"\",\n\t\t\t\t\"serialized\" : \"\"\n\t\t\t}\n\t\t};\n\t\tthis._overrides = {};\n\t\tthis._current = \"default\";\n\t\tthis._injected = [];\n\t\tthis.rendition.hooks.content.register(this.inject.bind(this));\n\t\tthis.rendition.hooks.content.register(this.overrides.bind(this));\n\n\t}\n\n\t/**\n\t * Add themes to be used by a rendition\n\t * @param {object | Array<object> | string}\n\t * @example themes.register(\"light\", \"http://example.com/light.css\")\n\t * @example themes.register(\"light\", { \"body\": { \"color\": \"purple\"}})\n\t * @example themes.register({ \"light\" : {...}, \"dark\" : {...}})\n\t */\n\tregister () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (arguments.length === 1 && typeof(arguments[0]) === \"object\") {\n\t\t\treturn this.registerThemes(arguments[0]);\n\t\t}\n\t\tif (arguments.length === 1 && typeof(arguments[0]) === \"string\") {\n\t\t\treturn this.default(arguments[0]);\n\t\t}\n\t\tif (arguments.length === 2 && typeof(arguments[1]) === \"string\") {\n\t\t\treturn this.registerUrl(arguments[0], arguments[1]);\n\t\t}\n\t\tif (arguments.length === 2 && typeof(arguments[1]) === \"object\") {\n\t\t\treturn this.registerRules(arguments[0], arguments[1]);\n\t\t}\n\t}\n\n\t/**\n\t * Add a default theme to be used by a rendition\n\t * @param {object | string} theme\n\t * @example themes.register(\"http://example.com/default.css\")\n\t * @example themes.register({ \"body\": { \"color\": \"purple\"}})\n\t */\n\tdefault (theme) {\n\t\tif (!theme) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof(theme) === \"string\") {\n\t\t\treturn this.registerUrl(\"default\", theme);\n\t\t}\n\t\tif (typeof(theme) === \"object\") {\n\t\t\treturn this.registerRules(\"default\", theme);\n\t\t}\n\t}\n\n\t/**\n\t * Register themes object\n\t * @param {object} themes\n\t */\n\tregisterThemes (themes) {\n\t\tfor (var theme in themes) {\n\t\t\tif (themes.hasOwnProperty(theme)) {\n\t\t\t\tif (typeof(themes[theme]) === \"string\") {\n\t\t\t\t\tthis.registerUrl(theme, themes[theme]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.registerRules(theme, themes[theme]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register a theme by passing its css as string\n\t * @param {string} name \n\t * @param {string} css \n\t */\n\tregisterCss (name, css) {\n\t\tthis._themes[name] = { \"serialized\" : css };\n\t\tif (this._injected[name] || name == 'default') {\n\t\t\tthis.update(name);\n\t\t}\n\t}\n\n\t/**\n\t * Register a url\n\t * @param {string} name\n\t * @param {string} input\n\t */\n\tregisterUrl (name, input) {\n\t\tvar url = new Url(input);\n\t\tthis._themes[name] = { \"url\": url.toString() };\n\t\tif (this._injected[name] || name == 'default') {\n\t\t\tthis.update(name);\n\t\t}\n\t}\n\n\t/**\n\t * Register rule\n\t * @param {string} name\n\t * @param {object} rules\n\t */\n\tregisterRules (name, rules) {\n\t\tthis._themes[name] = { \"rules\": rules };\n\t\t// TODO: serialize css rules\n\t\tif (this._injected[name] || name == 'default') {\n\t\t\tthis.update(name);\n\t\t}\n\t}\n\n\t/**\n\t * Select a theme\n\t * @param {string} name\n\t */\n\tselect (name) {\n\t\tvar prev = this._current;\n\t\tvar contents;\n\n\t\tthis._current = name;\n\t\tthis.update(name);\n\n\t\tcontents = this.rendition.getContents();\n\t\tcontents.forEach( (content) => {\n\t\t\tcontent.removeClass(prev);\n\t\t\tcontent.addClass(name);\n\t\t});\n\t}\n\n\t/**\n\t * Update a theme\n\t * @param {string} name\n\t */\n\tupdate (name) {\n\t\tvar contents = this.rendition.getContents();\n\t\tcontents.forEach( (content) => {\n\t\t\tthis.add(name, content);\n\t\t});\n\t}\n\n\t/**\n\t * Inject all themes into contents\n\t * @param {Contents} contents\n\t */\n\tinject (contents) {\n\t\tvar links = [];\n\t\tvar themes = this._themes;\n\t\tvar theme;\n\n\t\tfor (var name in themes) {\n\t\t\tif (themes.hasOwnProperty(name) && (name === this._current || name === \"default\")) {\n\t\t\t\ttheme = themes[name];\n\t\t\t\tif((theme.rules && Object.keys(theme.rules).length > 0) || (theme.url && links.indexOf(theme.url) === -1)) {\n\t\t\t\t\tthis.add(name, contents);\n\t\t\t\t}\n\t\t\t\tthis._injected.push(name);\n\t\t\t}\n\t\t}\n\n\t\tif(this._current != \"default\") {\n\t\t\tcontents.addClass(this._current);\n\t\t}\n\t}\n\n\t/**\n\t * Add Theme to contents\n\t * @param {string} name\n\t * @param {Contents} contents\n\t */\n\tadd (name, contents) {\n\t\tvar theme = this._themes[name];\n\n\t\tif (!theme || !contents) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (theme.url) {\n\t\t\tcontents.addStylesheet(theme.url);\n\t\t} else if (theme.serialized) {\n\t\t\tcontents.addStylesheetCss(theme.serialized, name);\n\t\t\ttheme.injected = true;\n\t\t} else if (theme.rules) {\n\t\t\tcontents.addStylesheetRules(theme.rules, name);\n\t\t\ttheme.injected = true;\n\t\t}\n\t}\n\n\t/**\n\t * Add override\n\t * @param {string} name\n\t * @param {string} value\n\t * @param {boolean} priority\n\t */\n\toverride (name, value, priority) {\n\t\tvar contents = this.rendition.getContents();\n\n\t\tthis._overrides[name] = {\n\t\t\tvalue: value,\n\t\t\tpriority: priority === true\n\t\t};\n\n\t\tcontents.forEach( (content) => {\n\t\t\tcontent.css(name, this._overrides[name].value, this._overrides[name].priority);\n\t\t});\n\t}\n\n\tremoveOverride (name) {\n\t\tvar contents = this.rendition.getContents();\n\n\t\tdelete this._overrides[name];\n\n\t\tcontents.forEach( (content) => {\n\t\t\tcontent.css(name);\n\t\t});\n\t}\n\n\t/**\n\t * Add all overrides\n\t * @param {Content} content\n\t */\n\toverrides (contents) {\n\t\tvar overrides = this._overrides;\n\n\t\tfor (var rule in overrides) {\n\t\t\tif (overrides.hasOwnProperty(rule)) {\n\t\t\t\tcontents.css(rule, overrides[rule].value, overrides[rule].priority);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Adjust the font size of a rendition\n\t * @param {number} size\n\t */\n\tfontSize (size) {\n\t\tthis.override(\"font-size\", size);\n\t}\n\n\t/**\n\t * Adjust the font-family of a rendition\n\t * @param {string} f\n\t */\n\tfont (f) {\n\t\tthis.override(\"font-family\", f, true);\n\t}\n\n\tdestroy() {\n\t\tthis.rendition = undefined;\n\t\tthis._themes = undefined;\n\t\tthis._overrides = undefined;\n\t\tthis._current = undefined;\n\t\tthis._injected = undefined;\n\t}\n\n}\n\nexport default Themes;\n"],"names":["Themes","rendition","theme","themes","name","css","input","url","Url","rules","prev","contents","content","links","value","priority","overrides","rule","size","f"],"mappings":"+CAOA,MAAMA,CAAO,CACZ,YAAYC,EAAW,CACtB,KAAK,UAAYA,EACjB,KAAK,QAAU,CACd,QAAY,CACX,MAAU,CAAE,EACZ,IAAQ,GACR,WAAe,EACf,CACJ,EACE,KAAK,WAAa,GAClB,KAAK,SAAW,UAChB,KAAK,UAAY,GACjB,KAAK,UAAU,MAAM,QAAQ,SAAS,KAAK,OAAO,KAAK,IAAI,CAAC,EAC5D,KAAK,UAAU,MAAM,QAAQ,SAAS,KAAK,UAAU,KAAK,IAAI,CAAC,CAE/D,CASD,UAAY,CACX,GAAI,UAAU,SAAW,EAGzB,IAAI,UAAU,SAAW,GAAK,OAAO,UAAU,CAAC,GAAO,SACtD,OAAO,KAAK,eAAe,UAAU,CAAC,CAAC,EAExC,GAAI,UAAU,SAAW,GAAK,OAAO,UAAU,CAAC,GAAO,SACtD,OAAO,KAAK,QAAQ,UAAU,CAAC,CAAC,EAEjC,GAAI,UAAU,SAAW,GAAK,OAAO,UAAU,CAAC,GAAO,SACtD,OAAO,KAAK,YAAY,UAAU,CAAC,EAAG,UAAU,CAAC,CAAC,EAEnD,GAAI,UAAU,SAAW,GAAK,OAAO,UAAU,CAAC,GAAO,SACtD,OAAO,KAAK,cAAc,UAAU,CAAC,EAAG,UAAU,CAAC,CAAC,EAErD,CAQD,QAASC,EAAO,CACf,GAAKA,EAGL,IAAI,OAAOA,GAAW,SACrB,OAAO,KAAK,YAAY,UAAWA,CAAK,EAEzC,GAAI,OAAOA,GAAW,SACrB,OAAO,KAAK,cAAc,UAAWA,CAAK,EAE3C,CAMD,eAAgBC,EAAQ,CACvB,QAASD,KAASC,EACbA,EAAO,eAAeD,CAAK,IAC1B,OAAOC,EAAOD,CAAK,GAAO,SAC7B,KAAK,YAAYA,EAAOC,EAAOD,CAAK,CAAC,EAErC,KAAK,cAAcA,EAAOC,EAAOD,CAAK,CAAC,EAI1C,CAOD,YAAaE,EAAMC,EAAK,CACvB,KAAK,QAAQD,CAAI,EAAI,CAAE,WAAeC,CAAG,GACrC,KAAK,UAAUD,CAAI,GAAKA,GAAQ,YACnC,KAAK,OAAOA,CAAI,CAEjB,CAOD,YAAaA,EAAME,EAAO,CACzB,IAAIC,EAAM,IAAIC,EAAIF,CAAK,EACvB,KAAK,QAAQF,CAAI,EAAI,CAAE,IAAOG,EAAI,SAAQ,IACtC,KAAK,UAAUH,CAAI,GAAKA,GAAQ,YACnC,KAAK,OAAOA,CAAI,CAEjB,CAOD,cAAeA,EAAMK,EAAO,CAC3B,KAAK,QAAQL,CAAI,EAAI,CAAE,MAASK,CAAK,GAEjC,KAAK,UAAUL,CAAI,GAAKA,GAAQ,YACnC,KAAK,OAAOA,CAAI,CAEjB,CAMD,OAAQA,EAAM,CACb,IAAIM,EAAO,KAAK,SACZC,EAEJ,KAAK,SAAWP,EAChB,KAAK,OAAOA,CAAI,EAEhBO,EAAW,KAAK,UAAU,cAC1BA,EAAS,QAAUC,GAAY,CAC9BA,EAAQ,YAAYF,CAAI,EACxBE,EAAQ,SAASR,CAAI,CACxB,CAAG,CACD,CAMD,OAAQA,EAAM,CACb,IAAIO,EAAW,KAAK,UAAU,YAAW,EACzCA,EAAS,QAAUC,GAAY,CAC9B,KAAK,IAAIR,EAAMQ,CAAO,CACzB,CAAG,CACD,CAMD,OAAQD,EAAU,CACjB,IAAIE,EAAQ,CAAA,EACRV,EAAS,KAAK,QACdD,EAEJ,QAASE,KAAQD,EACZA,EAAO,eAAeC,CAAI,IAAMA,IAAS,KAAK,UAAYA,IAAS,aACtEF,EAAQC,EAAOC,CAAI,GACfF,EAAM,OAAS,OAAO,KAAKA,EAAM,KAAK,EAAE,OAAS,GAAOA,EAAM,KAAOW,EAAM,QAAQX,EAAM,GAAG,IAAM,KACrG,KAAK,IAAIE,EAAMO,CAAQ,EAExB,KAAK,UAAU,KAAKP,CAAI,GAIvB,KAAK,UAAY,WACnBO,EAAS,SAAS,KAAK,QAAQ,CAEhC,CAOD,IAAKP,EAAMO,EAAU,CACpB,IAAIT,EAAQ,KAAK,QAAQE,CAAI,EAEzB,CAACF,GAAS,CAACS,IAIXT,EAAM,IACTS,EAAS,cAAcT,EAAM,GAAG,EACtBA,EAAM,YAChBS,EAAS,iBAAiBT,EAAM,WAAYE,CAAI,EAChDF,EAAM,SAAW,IACPA,EAAM,QAChBS,EAAS,mBAAmBT,EAAM,MAAOE,CAAI,EAC7CF,EAAM,SAAW,IAElB,CAQD,SAAUE,EAAMU,EAAOC,EAAU,CAChC,IAAIJ,EAAW,KAAK,UAAU,YAAW,EAEzC,KAAK,WAAWP,CAAI,EAAI,CACvB,MAAOU,EACP,SAAUC,IAAa,EAC1B,EAEEJ,EAAS,QAAUC,GAAY,CAC9BA,EAAQ,IAAIR,EAAM,KAAK,WAAWA,CAAI,EAAE,MAAO,KAAK,WAAWA,CAAI,EAAE,QAAQ,CAChF,CAAG,CACD,CAED,eAAgBA,EAAM,CACrB,IAAIO,EAAW,KAAK,UAAU,YAAW,EAEzC,OAAO,KAAK,WAAWP,CAAI,EAE3BO,EAAS,QAAUC,GAAY,CAC9BA,EAAQ,IAAIR,CAAI,CACnB,CAAG,CACD,CAMD,UAAWO,EAAU,CACpB,IAAIK,EAAY,KAAK,WAErB,QAASC,KAAQD,EACZA,EAAU,eAAeC,CAAI,GAChCN,EAAS,IAAIM,EAAMD,EAAUC,CAAI,EAAE,MAAOD,EAAUC,CAAI,EAAE,QAAQ,CAGpE,CAMD,SAAUC,EAAM,CACf,KAAK,SAAS,YAAaA,CAAI,CAC/B,CAMD,KAAMC,EAAG,CACR,KAAK,SAAS,cAAeA,EAAG,EAAI,CACpC,CAED,SAAU,CACT,KAAK,UAAY,OACjB,KAAK,QAAU,OACf,KAAK,WAAa,OAClB,KAAK,SAAW,OAChB,KAAK,UAAY,MACjB,CAEF","x_google_ignoreList":[0]}