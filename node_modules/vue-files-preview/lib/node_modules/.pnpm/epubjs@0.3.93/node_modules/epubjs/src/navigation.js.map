{"version":3,"file":"navigation.js","sources":["../../../../../../../../node_modules/.pnpm/epubjs@0.3.93/node_modules/epubjs/src/navigation.js"],"sourcesContent":["import {qs, qsa, querySelectorByType, filterChildren, getParentByTagName} from \"./utils/core\";\n\n/**\n * Navigation Parser\n * @param {document} xml navigation html / xhtml / ncx\n */\nclass Navigation {\n\tconstructor(xml) {\n\t\tthis.toc = [];\n\t\tthis.tocByHref = {};\n\t\tthis.tocById = {};\n\n\t\tthis.landmarks = [];\n\t\tthis.landmarksByType = {};\n\n\t\tthis.length = 0;\n\t\tif (xml) {\n\t\t\tthis.parse(xml);\n\t\t}\n\t}\n\n\t/**\n\t * Parse out the navigation items\n\t * @param {document} xml navigation html / xhtml / ncx\n\t */\n\tparse(xml) {\n\t\tlet isXml = xml.nodeType;\n\t\tlet html;\n\t\tlet ncx;\n\n\t\tif (isXml) {\n\t\t\thtml = qs(xml, \"html\");\n\t\t\tncx = qs(xml, \"ncx\");\n\t\t}\n\n\t\tif (!isXml) {\n\t\t\tthis.toc = this.load(xml);\n\t\t} else if(html) {\n\t\t\tthis.toc = this.parseNav(xml);\n\t\t\tthis.landmarks = this.parseLandmarks(xml);\n\t\t} else if(ncx){\n\t\t\tthis.toc = this.parseNcx(xml);\n\t\t}\n\n\t\tthis.length = 0;\n\n\t\tthis.unpack(this.toc);\n\t}\n\n\t/**\n\t * Unpack navigation items\n\t * @private\n\t * @param  {array} toc\n\t */\n\tunpack(toc) {\n\t\tvar item;\n\n\t\tfor (var i = 0; i < toc.length; i++) {\n\t\t\titem = toc[i];\n\n\t\t\tif (item.href) {\n\t\t\t\tthis.tocByHref[item.href] = i;\n\t\t\t}\n\n\t\t\tif (item.id) {\n\t\t\t\tthis.tocById[item.id] = i;\n\t\t\t}\n\n\t\t\tthis.length++;\n\n\t\t\tif (item.subitems.length) {\n\t\t\t\tthis.unpack(item.subitems);\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Get an item from the navigation\n\t * @param  {string} target\n\t * @return {object} navItem\n\t */\n\tget(target) {\n\t\tvar index;\n\n\t\tif(!target) {\n\t\t\treturn this.toc;\n\t\t}\n\n\t\tif(target.indexOf(\"#\") === 0) {\n\t\t\tindex = this.tocById[target.substring(1)];\n\t\t} else if(target in this.tocByHref){\n\t\t\tindex = this.tocByHref[target];\n\t\t}\n\n\t\treturn this.getByIndex(target, index, this.toc);\n\t}\n\n\t/**\n\t * Get an item from navigation subitems recursively by index\n\t * @param  {string} target\n\t * @param  {number} index\n\t * @param  {array} navItems\n\t * @return {object} navItem\n\t */\n\tgetByIndex(target, index, navItems) {\n\t\tif (navItems.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst item = navItems[index];\n\t\tif (item && (target === item.id || target === item.href)) {\n\t\t\treturn item;\n\t\t} else {\n\t\t\tlet result;\n\t\t\tfor (let i = 0; i < navItems.length; ++i) {\n\t\t\t\tresult = this.getByIndex(target, index, navItems[i].subitems);\n\t\t\t\tif (result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t/**\n\t * Get a landmark by type\n\t * List of types: https://idpf.github.io/epub-vocabs/structure/\n\t * @param  {string} type\n\t * @return {object} landmarkItem\n\t */\n\tlandmark(type) {\n\t\tvar index;\n\n\t\tif(!type) {\n\t\t\treturn this.landmarks;\n\t\t}\n\n\t\tindex = this.landmarksByType[type];\n\n\t\treturn this.landmarks[index];\n\t}\n\n\t/**\n\t * Parse toc from a Epub > 3.0 Nav\n\t * @private\n\t * @param  {document} navHtml\n\t * @return {array} navigation list\n\t */\n\tparseNav(navHtml){\n\t\tvar navElement = querySelectorByType(navHtml, \"nav\", \"toc\");\n\t\tvar list = [];\n\n\t\tif (!navElement) return list;\n\n\t\tlet navList = filterChildren(navElement, \"ol\", true);\n\t\tif (!navList) return list;\n\n\t\tlist = this.parseNavList(navList);\n\t\treturn list;\n\t}\n\n\t/**\n\t * Parses lists in the toc\n\t * @param  {document} navListHtml\n\t * @param  {string} parent id\n\t * @return {array} navigation list\n\t */\n\tparseNavList(navListHtml, parent) {\n\t\tconst result = [];\n\n\t\tif (!navListHtml) return result;\n\t\tif (!navListHtml.children) return result;\n\t\t\n\t\tfor (let i = 0; i < navListHtml.children.length; i++) {\n\t\t\tconst item = this.navItem(navListHtml.children[i], parent);\n\n\t\t\tif (item) {\n\t\t\t\tresult.push(item);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Create a navItem\n\t * @private\n\t * @param  {element} item\n\t * @return {object} navItem\n\t */\n\tnavItem(item, parent) {\n\t\tlet id = item.getAttribute(\"id\") || undefined;\n\t\tlet content = filterChildren(item, \"a\", true)\n\t\t\t|| filterChildren(item, \"span\", true);\n\n\t\tif (!content) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet src = content.getAttribute(\"href\") || \"\";\n\t\t\n\t\tif (!id) {\n\t\t\tid = src;\n\t\t}\n\t\tlet text = content.textContent || \"\";\n\n\t\tlet subitems = [];\n\t\tlet nested = filterChildren(item, \"ol\", true);\n\t\tif (nested) {\n\t\t\tsubitems = \tthis.parseNavList(nested, id);\n\t\t}\n\n\t\treturn {\n\t\t\t\"id\": id,\n\t\t\t\"href\": src,\n\t\t\t\"label\": text,\n\t\t\t\"subitems\" : subitems,\n\t\t\t\"parent\" : parent\n\t\t};\n\t}\n\n\t/**\n\t * Parse landmarks from a Epub > 3.0 Nav\n\t * @private\n\t * @param  {document} navHtml\n\t * @return {array} landmarks list\n\t */\n\tparseLandmarks(navHtml){\n\t\tvar navElement = querySelectorByType(navHtml, \"nav\", \"landmarks\");\n\t\tvar navItems = navElement ? qsa(navElement, \"li\") : [];\n\t\tvar length = navItems.length;\n\t\tvar i;\n\t\tvar list = [];\n\t\tvar item;\n\n\t\tif(!navItems || length === 0) return list;\n\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\titem = this.landmarkItem(navItems[i]);\n\t\t\tif (item) {\n\t\t\t\tlist.push(item);\n\t\t\t\tthis.landmarksByType[item.type] = i;\n\t\t\t}\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Create a landmarkItem\n\t * @private\n\t * @param  {element} item\n\t * @return {object} landmarkItem\n\t */\n\tlandmarkItem(item){\n\t\tlet content = filterChildren(item, \"a\", true);\n\n\t\tif (!content) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet type = content.getAttributeNS(\"http://www.idpf.org/2007/ops\", \"type\") || undefined;\n\t\tlet href = content.getAttribute(\"href\") || \"\";\n\t\tlet text = content.textContent || \"\";\n\n\t\treturn {\n\t\t\t\"href\": href,\n\t\t\t\"label\": text,\n\t\t\t\"type\" : type\n\t\t};\n\t}\n\n\t/**\n\t * Parse from a Epub > 3.0 NC\n\t * @private\n\t * @param  {document} navHtml\n\t * @return {array} navigation list\n\t */\n\tparseNcx(tocXml){\n\t\tvar navPoints = qsa(tocXml, \"navPoint\");\n\t\tvar length = navPoints.length;\n\t\tvar i;\n\t\tvar toc = {};\n\t\tvar list = [];\n\t\tvar item, parent;\n\n\t\tif(!navPoints || length === 0) return list;\n\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\titem = this.ncxItem(navPoints[i]);\n\t\t\ttoc[item.id] = item;\n\t\t\tif(!item.parent) {\n\t\t\t\tlist.push(item);\n\t\t\t} else {\n\t\t\t\tparent = toc[item.parent];\n\t\t\t\tparent.subitems.push(item);\n\t\t\t}\n\t\t}\n\n\t\treturn list;\n\t}\n\n\t/**\n\t * Create a ncxItem\n\t * @private\n\t * @param  {element} item\n\t * @return {object} ncxItem\n\t */\n\tncxItem(item){\n\t\tvar id = item.getAttribute(\"id\") || false,\n\t\t\t\tcontent = qs(item, \"content\"),\n\t\t\t\tsrc = content.getAttribute(\"src\"),\n\t\t\t\tnavLabel = qs(item, \"navLabel\"),\n\t\t\t\ttext = navLabel.textContent ? navLabel.textContent : \"\",\n\t\t\t\tsubitems = [],\n\t\t\t\tparentNode = item.parentNode,\n\t\t\t\tparent;\n\n\t\tif(parentNode && (parentNode.nodeName === \"navPoint\" || parentNode.nodeName.split(':').slice(-1)[0] === \"navPoint\")) {\n\t\t\tparent = parentNode.getAttribute(\"id\");\n\t\t}\n\n\n\t\treturn {\n\t\t\t\"id\": id,\n\t\t\t\"href\": src,\n\t\t\t\"label\": text,\n\t\t\t\"subitems\" : subitems,\n\t\t\t\"parent\" : parent\n\t\t};\n\t}\n\n\t/**\n\t * Load Spine Items\n\t * @param  {object} json the items to be loaded\n\t * @return {Array} navItems\n\t */\n\tload(json) {\n\t\treturn json.map(item => {\n\t\t\titem.label = item.title;\n\t\t\titem.subitems = item.children ? this.load(item.children) : [];\n\t\t\treturn item;\n\t\t});\n\t}\n\n\t/**\n\t * forEach pass through\n\t * @param  {Function} fn function to run on each item\n\t * @return {method} forEach loop\n\t */\n\tforEach(fn) {\n\t\treturn this.toc.forEach(fn);\n\t}\n}\n\nexport default Navigation;\n"],"names":["Navigation","xml","isXml","html","ncx","qs","toc","item","i","target","index","navItems","result","type","navHtml","navElement","querySelectorByType","list","navList","filterChildren","navListHtml","parent","id","content","src","text","subitems","nested","qsa","length","href","tocXml","navPoints","navLabel","parentNode","json","fn"],"mappings":"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","x_google_ignoreList":[0]}