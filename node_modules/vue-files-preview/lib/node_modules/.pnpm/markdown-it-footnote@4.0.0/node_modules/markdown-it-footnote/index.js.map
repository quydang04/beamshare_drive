{"version":3,"file":"index.js","sources":["../../../../../../../node_modules/.pnpm/markdown-it-footnote@4.0.0/node_modules/markdown-it-footnote/index.mjs"],"sourcesContent":["// Process footnotes\n//\n'use strict'\n\n/// /////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name (tokens, idx, options, env/*, slf */) {\n  const n = Number(tokens[idx].meta.id + 1).toString()\n  let prefix = ''\n\n  if (typeof env.docId === 'string') prefix = `-${env.docId}-`\n\n  return prefix + n\n}\n\nfunction render_footnote_caption (tokens, idx/*, options, env, slf */) {\n  let n = Number(tokens[idx].meta.id + 1).toString()\n\n  if (tokens[idx].meta.subId > 0) n += `:${tokens[idx].meta.subId}`\n\n  return `[${n}]`\n}\n\nfunction render_footnote_ref (tokens, idx, options, env, slf) {\n  const id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf)\n  const caption = slf.rules.footnote_caption(tokens, idx, options, env, slf)\n  let refid = id\n\n  if (tokens[idx].meta.subId > 0) refid += `:${tokens[idx].meta.subId}`\n\n  return `<sup class=\"footnote-ref\"><a href=\"#fn${id}\" id=\"fnref${refid}\">${caption}</a></sup>`\n}\n\nfunction render_footnote_block_open (tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n'\n}\n\nfunction render_footnote_block_close () {\n  return '</ol>\\n</section>\\n'\n}\n\nfunction render_footnote_open (tokens, idx, options, env, slf) {\n  let id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf)\n\n  if (tokens[idx].meta.subId > 0) id += `:${tokens[idx].meta.subId}`\n\n  return `<li id=\"fn${id}\" class=\"footnote-item\">`\n}\n\nfunction render_footnote_close () {\n  return '</li>\\n'\n}\n\nfunction render_footnote_anchor (tokens, idx, options, env, slf) {\n  let id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf)\n\n  if (tokens[idx].meta.subId > 0) id += `:${tokens[idx].meta.subId}`\n\n  /* â†© with escape code to prevent display as Apple Emoji on iOS */\n  return ` <a href=\"#fnref${id}\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>`\n}\n\nexport default function footnote_plugin (md) {\n  const parseLinkLabel = md.helpers.parseLinkLabel\n  const isSpace = md.utils.isSpace\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close\n  md.renderer.rules.footnote_open         = render_footnote_open\n  md.renderer.rules.footnote_close        = render_footnote_close\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name\n\n  // Process footnote block definition\n  function footnote_def (state, startLine, endLine, silent) {\n    const start = state.bMarks[startLine] + state.tShift[startLine]\n    const max = state.eMarks[startLine]\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) return false\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) return false\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) return false\n\n    let pos\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) return false\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break\n      }\n    }\n\n    if (pos === start + 2) return false // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) return false\n    if (silent) return true\n    pos++\n\n    if (!state.env.footnotes) state.env.footnotes = {}\n    if (!state.env.footnotes.refs) state.env.footnotes.refs = {}\n    const label = state.src.slice(start + 2, pos - 2)\n    state.env.footnotes.refs[`:${label}`] = -1\n\n    const token_fref_o = new state.Token('footnote_reference_open', '', 1)\n    token_fref_o.meta  = { label }\n    token_fref_o.level = state.level++\n    state.tokens.push(token_fref_o)\n\n    const oldBMark = state.bMarks[startLine]\n    const oldTShift = state.tShift[startLine]\n    const oldSCount = state.sCount[startLine]\n    const oldParentType = state.parentType\n\n    const posAfterColon = pos\n    const initial = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    state.tShift[startLine] = pos - posAfterColon\n    state.sCount[startLine] = offset - initial\n\n    state.bMarks[startLine] = posAfterColon\n    state.blkIndent += 4\n    state.parentType = 'footnote'\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true)\n\n    state.parentType = oldParentType\n    state.blkIndent -= 4\n    state.tShift[startLine] = oldTShift\n    state.sCount[startLine] = oldSCount\n    state.bMarks[startLine] = oldBMark\n\n    const token_fref_c = new state.Token('footnote_reference_close', '', -1)\n    token_fref_c.level = --state.level\n    state.tokens.push(token_fref_c)\n\n    return true\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline (state, silent) {\n    const max = state.posMax\n    const start = state.pos\n\n    if (start + 2 >= max) return false\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) return false\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) return false\n\n    const labelStart = start + 2\n    const labelEnd = parseLinkLabel(state, start + 1)\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) return false\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) state.env.footnotes = {}\n      if (!state.env.footnotes.list) state.env.footnotes.list = []\n      const footnoteId = state.env.footnotes.list.length\n      const tokens = []\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens\n      )\n\n      const token = state.push('footnote_ref', '', 0)\n      token.meta = { id: footnoteId }\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens\n      }\n    }\n\n    state.pos = labelEnd + 1\n    state.posMax = max\n    return true\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref (state, silent) {\n    const max = state.posMax\n    const start = state.pos\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) return false\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) return false\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) return false\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) return false\n\n    let pos\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) return false\n      if (state.src.charCodeAt(pos) === 0x0A) return false\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break\n      }\n    }\n\n    if (pos === start + 2) return false // no empty footnote labels\n    if (pos >= max) return false\n    pos++\n\n    const label = state.src.slice(start + 2, pos - 1)\n    if (typeof state.env.footnotes.refs[`:${label}`] === 'undefined') return false\n\n    if (!silent) {\n      if (!state.env.footnotes.list) state.env.footnotes.list = []\n\n      let footnoteId\n\n      if (state.env.footnotes.refs[`:${label}`] < 0) {\n        footnoteId = state.env.footnotes.list.length\n        state.env.footnotes.list[footnoteId] = { label, count: 0 }\n        state.env.footnotes.refs[`:${label}`] = footnoteId\n      } else {\n        footnoteId = state.env.footnotes.refs[`:${label}`]\n      }\n\n      const footnoteSubId = state.env.footnotes.list[footnoteId].count\n      state.env.footnotes.list[footnoteId].count++\n\n      const token = state.push('footnote_ref', '', 0)\n      token.meta = { id: footnoteId, subId: footnoteSubId, label }\n    }\n\n    state.pos = pos\n    state.posMax = max\n    return true\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail (state) {\n    let tokens\n    let current\n    let currentLabel\n    let insideRef = false\n    const refTokens = {}\n\n    if (!state.env.footnotes) { return }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true\n        current = []\n        currentLabel = tok.meta.label\n        return false\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current\n        return false\n      }\n      if (insideRef) { current.push(tok) }\n      return !insideRef\n    })\n\n    if (!state.env.footnotes.list) { return }\n    const list = state.env.footnotes.list\n\n    state.tokens.push(new state.Token('footnote_block_open', '', 1))\n\n    for (let i = 0, l = list.length; i < l; i++) {\n      const token_fo = new state.Token('footnote_open', '', 1)\n      token_fo.meta = { id: i, label: list[i].label }\n      state.tokens.push(token_fo)\n\n      if (list[i].tokens) {\n        tokens = []\n\n        const token_po = new state.Token('paragraph_open', 'p', 1)\n        token_po.block = true\n        tokens.push(token_po)\n\n        const token_i = new state.Token('inline', '', 0)\n        token_i.children = list[i].tokens\n        token_i.content = list[i].content\n        tokens.push(token_i)\n\n        const token_pc = new state.Token('paragraph_close', 'p', -1)\n        token_pc.block    = true\n        tokens.push(token_pc)\n      } else if (list[i].label) {\n        tokens = refTokens[`:${list[i].label}`]\n      }\n\n      if (tokens) state.tokens = state.tokens.concat(tokens)\n\n      let lastParagraph\n\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop()\n      } else {\n        lastParagraph = null\n      }\n\n      const t = list[i].count > 0 ? list[i].count : 1\n      for (let j = 0; j < t; j++) {\n        const token_a = new state.Token('footnote_anchor', '', 0)\n        token_a.meta = { id: i, subId: j, label: list[i].label }\n        state.tokens.push(token_a)\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph)\n      }\n\n      state.tokens.push(new state.Token('footnote_close', '', -1))\n    }\n\n    state.tokens.push(new state.Token('footnote_block_close', '', -1))\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: ['paragraph', 'reference'] })\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline)\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref)\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail)\n};\n"],"names":["render_footnote_anchor_name","tokens","idx","options","env","n","prefix","render_footnote_caption","render_footnote_ref","slf","id","caption","refid","render_footnote_block_open","render_footnote_block_close","render_footnote_open","render_footnote_close","render_footnote_anchor","footnote_plugin","md","parseLinkLabel","isSpace","footnote_def","state","startLine","endLine","silent","start","max","pos","label","token_fref_o","oldBMark","oldTShift","oldSCount","oldParentType","posAfterColon","initial","offset","ch","token_fref_c","footnote_inline","labelStart","labelEnd","footnoteId","token","footnote_ref","footnoteSubId","footnote_tail","current","currentLabel","insideRef","refTokens","tok","list","i","l","token_fo","token_po","token_i","token_pc","lastParagraph","t","j","token_a"],"mappings":"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","x_google_ignoreList":[0]}