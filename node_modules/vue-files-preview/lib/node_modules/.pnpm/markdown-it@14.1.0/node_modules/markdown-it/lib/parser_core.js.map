{"version":3,"file":"parser_core.js","sources":["../../../../../../../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/parser_core.mjs"],"sourcesContent":["/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\nimport Ruler from './ruler.mjs'\nimport StateCore from './rules_core/state_core.mjs'\n\nimport r_normalize from './rules_core/normalize.mjs'\nimport r_block from './rules_core/block.mjs'\nimport r_inline from './rules_core/inline.mjs'\nimport r_linkify from './rules_core/linkify.mjs'\nimport r_replacements from './rules_core/replacements.mjs'\nimport r_smartquotes from './rules_core/smartquotes.mjs'\nimport r_text_join from './rules_core/text_join.mjs'\n\nconst _rules = [\n  ['normalize',      r_normalize],\n  ['block',          r_block],\n  ['inline',         r_inline],\n  ['linkify',        r_linkify],\n  ['replacements',   r_replacements],\n  ['smartquotes',    r_smartquotes],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  ['text_join',      r_text_join]\n]\n\n/**\n * new Core()\n **/\nfunction Core () {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler()\n\n  for (let i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1])\n  }\n}\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  const rules = this.ruler.getRules('')\n\n  for (let i = 0, l = rules.length; i < l; i++) {\n    rules[i](state)\n  }\n}\n\nCore.prototype.State = StateCore\n\nexport default Core\n"],"names":["_rules","r_normalize","r_block","r_inline","r_linkify","r_replacements","r_smartquotes","r_text_join","Core","Ruler","i","state","rules","l","StateCore"],"mappings":"gWAkBMA,EAAS,CACb,CAAC,YAAkBC,CAAW,EAC9B,CAAC,QAAkBC,CAAO,EAC1B,CAAC,SAAkBC,CAAQ,EAC3B,CAAC,UAAkBC,CAAS,EAC5B,CAAC,eAAkBC,CAAc,EACjC,CAAC,cAAkBC,CAAa,EAGhC,CAAC,YAAkBC,CAAW,CAChC,EAKA,SAASC,GAAQ,CAMf,KAAK,MAAQ,IAAIC,EAEjB,QAASC,EAAI,EAAGA,EAAIV,EAAO,OAAQU,IACjC,KAAK,MAAM,KAAKV,EAAOU,CAAC,EAAE,CAAC,EAAGV,EAAOU,CAAC,EAAE,CAAC,CAAC,CAE9C,CAOAF,EAAK,UAAU,QAAU,SAAUG,EAAO,CACxC,MAAMC,EAAQ,KAAK,MAAM,SAAS,EAAE,EAEpC,QAASF,EAAI,EAAGG,EAAID,EAAM,OAAQF,EAAIG,EAAGH,IACvCE,EAAMF,CAAC,EAAEC,CAAK,CAElB,EAEAH,EAAK,UAAU,MAAQM","x_google_ignoreList":[0]}