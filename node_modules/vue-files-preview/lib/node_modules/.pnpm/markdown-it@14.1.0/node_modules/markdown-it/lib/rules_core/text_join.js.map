{"version":3,"file":"text_join.js","sources":["../../../../../../../../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_core/text_join.mjs"],"sourcesContent":["// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\nexport default function text_join (state) {\n  let curr, last\n  const blockTokens = state.tokens\n  const l = blockTokens.length\n\n  for (let j = 0; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue\n\n    const tokens = blockTokens[j].children\n    const max = tokens.length\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text'\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr] }\n\n        last++\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last\n    }\n  }\n}\n"],"names":["text_join","state","curr","last","blockTokens","j","tokens","max"],"mappings":"aAQe,SAASA,EAAWC,EAAO,CACxC,IAAIC,EAAMC,EACV,MAAMC,EAAcH,EAAM,OACpB,EAAIG,EAAY,OAEtB,QAASC,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,GAAID,EAAYC,CAAC,EAAE,OAAS,SAAU,SAEtC,MAAMC,EAASF,EAAYC,CAAC,EAAE,SACxBE,EAAMD,EAAO,OAEnB,IAAKJ,EAAO,EAAGA,EAAOK,EAAKL,IACrBI,EAAOJ,CAAI,EAAE,OAAS,iBACxBI,EAAOJ,CAAI,EAAE,KAAO,QAIxB,IAAKA,EAAOC,EAAO,EAAGD,EAAOK,EAAKL,IAC5BI,EAAOJ,CAAI,EAAE,OAAS,QACtBA,EAAO,EAAIK,GACXD,EAAOJ,EAAO,CAAC,EAAE,OAAS,OAE5BI,EAAOJ,EAAO,CAAC,EAAE,QAAUI,EAAOJ,CAAI,EAAE,QAAUI,EAAOJ,EAAO,CAAC,EAAE,SAE/DA,IAASC,IAAQG,EAAOH,CAAI,EAAIG,EAAOJ,CAAI,GAE/CC,KAIAD,IAASC,IACXG,EAAO,OAASH,EAEnB,CACH","x_google_ignoreList":[0]}