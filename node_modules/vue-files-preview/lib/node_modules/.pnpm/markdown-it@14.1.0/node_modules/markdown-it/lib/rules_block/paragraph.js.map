{"version":3,"file":"paragraph.js","sources":["../../../../../../../../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/paragraph.mjs"],"sourcesContent":["// Paragraph\n\nexport default function paragraph (state, startLine, endLine) {\n  const terminatorRules = state.md.block.ruler.getRules('paragraph')\n  const oldParentType = state.parentType\n  let nextLine = startLine + 1\n  state.parentType = 'paragraph'\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue }\n\n    // Some tags can terminate paragraph without empty line.\n    let terminate = false\n    for (let i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true\n        break\n      }\n    }\n    if (terminate) { break }\n  }\n\n  const content = state.getLines(startLine, nextLine, state.blkIndent, false).trim()\n\n  state.line = nextLine\n\n  const token_o    = state.push('paragraph_open', 'p', 1)\n  token_o.map      = [startLine, state.line]\n\n  const token_i    = state.push('inline', '', 0)\n  token_i.content  = content\n  token_i.map      = [startLine, state.line]\n  token_i.children = []\n\n  state.push('paragraph_close', 'p', -1)\n\n  state.parentType = oldParentType\n\n  return true\n}\n"],"names":["paragraph","state","startLine","endLine","terminatorRules","oldParentType","nextLine","terminate","i","l","content","token_o","token_i"],"mappings":"aAEe,SAASA,EAAWC,EAAOC,EAAWC,EAAS,CAC5D,MAAMC,EAAkBH,EAAM,GAAG,MAAM,MAAM,SAAS,WAAW,EAC3DI,EAAgBJ,EAAM,WAC5B,IAAIK,EAAWJ,EAAY,EAI3B,IAHAD,EAAM,WAAa,YAGZK,EAAWH,GAAW,CAACF,EAAM,QAAQK,CAAQ,EAAGA,IAAY,CAMjE,GAHIL,EAAM,OAAOK,CAAQ,EAAIL,EAAM,UAAY,GAG3CA,EAAM,OAAOK,CAAQ,EAAI,EAAK,SAGlC,IAAIC,EAAY,GAChB,QAASC,EAAI,EAAGC,EAAIL,EAAgB,OAAQI,EAAIC,EAAGD,IACjD,GAAIJ,EAAgBI,CAAC,EAAEP,EAAOK,EAAUH,EAAS,EAAI,EAAG,CACtDI,EAAY,GACZ,KACD,CAEH,GAAIA,EAAa,KAClB,CAED,MAAMG,EAAUT,EAAM,SAASC,EAAWI,EAAUL,EAAM,UAAW,EAAK,EAAE,KAAM,EAElFA,EAAM,KAAOK,EAEb,MAAMK,EAAaV,EAAM,KAAK,iBAAkB,IAAK,CAAC,EACtDU,EAAQ,IAAW,CAACT,EAAWD,EAAM,IAAI,EAEzC,MAAMW,EAAaX,EAAM,KAAK,SAAU,GAAI,CAAC,EAC7C,OAAAW,EAAQ,QAAWF,EACnBE,EAAQ,IAAW,CAACV,EAAWD,EAAM,IAAI,EACzCW,EAAQ,SAAW,CAAE,EAErBX,EAAM,KAAK,kBAAmB,IAAK,EAAE,EAErCA,EAAM,WAAaI,EAEZ,EACT","x_google_ignoreList":[0]}