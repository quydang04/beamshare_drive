{"version":3,"file":"backticks.js","sources":["../../../../../../../../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/backticks.mjs"],"sourcesContent":["// Parse backticks\n\nexport default function backtick (state, silent) {\n  let pos = state.pos\n  const ch = state.src.charCodeAt(pos)\n\n  if (ch !== 0x60/* ` */) { return false }\n\n  const start = pos\n  pos++\n  const max = state.posMax\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++ }\n\n  const marker = state.src.slice(start, pos)\n  const openerLength = marker.length\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker\n    state.pos += openerLength\n    return true\n  }\n\n  let matchEnd = pos\n  let matchStart\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++ }\n\n    const closerLength = matchEnd - matchStart\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        const token = state.push('code_inline', 'code', 0)\n        token.markup = marker\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1')\n      }\n      state.pos = matchEnd\n      return true\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true\n\n  if (!silent) state.pending += marker\n  state.pos += openerLength\n  return true\n}\n"],"names":["backtick","state","silent","pos","start","max","marker","openerLength","matchEnd","matchStart","closerLength","token"],"mappings":"aAEe,SAASA,EAAUC,EAAOC,EAAQ,CAC/C,IAAIC,EAAMF,EAAM,IAGhB,GAFWA,EAAM,IAAI,WAAWE,CAAG,IAExB,GAAe,MAAO,GAEjC,MAAMC,EAAQD,EACdA,IACA,MAAME,EAAMJ,EAAM,OAGlB,KAAOE,EAAME,GAAOJ,EAAM,IAAI,WAAWE,CAAG,IAAM,IAAeA,IAEjE,MAAMG,EAASL,EAAM,IAAI,MAAMG,EAAOD,CAAG,EACnCI,EAAeD,EAAO,OAE5B,GAAIL,EAAM,mBAAqBA,EAAM,UAAUM,CAAY,GAAK,IAAMH,EACpE,OAAKF,IAAQD,EAAM,SAAWK,GAC9BL,EAAM,KAAOM,EACN,GAGT,IAAIC,EAAWL,EACXM,EAGJ,MAAQA,EAAaR,EAAM,IAAI,QAAQ,IAAKO,CAAQ,KAAO,IAAI,CAI7D,IAHAA,EAAWC,EAAa,EAGjBD,EAAWH,GAAOJ,EAAM,IAAI,WAAWO,CAAQ,IAAM,IAAeA,IAE3E,MAAME,EAAeF,EAAWC,EAEhC,GAAIC,IAAiBH,EAAc,CAEjC,GAAI,CAACL,EAAQ,CACX,MAAMS,EAAQV,EAAM,KAAK,cAAe,OAAQ,CAAC,EACjDU,EAAM,OAASL,EACfK,EAAM,QAAUV,EAAM,IAAI,MAAME,EAAKM,CAAU,EAC5C,QAAQ,MAAO,GAAG,EAClB,QAAQ,WAAY,IAAI,CAC5B,CACD,OAAAR,EAAM,IAAMO,EACL,EACR,CAGDP,EAAM,UAAUS,CAAY,EAAID,CACjC,CAGD,OAAAR,EAAM,iBAAmB,GAEpBC,IAAQD,EAAM,SAAWK,GAC9BL,EAAM,KAAOM,EACN,EACT","x_google_ignoreList":[0]}