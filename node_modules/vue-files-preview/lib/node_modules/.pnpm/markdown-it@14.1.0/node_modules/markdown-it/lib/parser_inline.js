"use strict";const h=require("./ruler.js"),g=require("./rules_inline/state_inline.js"),a=require("./rules_inline/text.js"),m=require("./rules_inline/linkify.js"),q=require("./rules_inline/newline.js"),d=require("./rules_inline/escape.js"),w=require("./rules_inline/backticks.js"),f=require("./rules_inline/strikethrough.js"),k=require("./rules_inline/emphasis.js"),x=require("./rules_inline/link.js"),y=require("./rules_inline/image.js"),_=require("./rules_inline/autolink.js"),b=require("./rules_inline/html_inline.js"),v=require("./rules_inline/entity.js"),P=require("./rules_inline/balance_pairs.js"),z=require("./rules_inline/fragments_join.js"),u=[["text",a],["linkify",m],["newline",q],["escape",d],["backticks",w],["strikethrough",f.tokenize],["emphasis",k.tokenize],["link",x],["image",y],["autolink",_],["html_inline",b],["entity",v]],p=[["balance_pairs",P],["strikethrough",f.postProcess],["emphasis",k.postProcess],["fragments_join",z]];function c(){this.ruler=new h;for(let e=0;e<u.length;e++)this.ruler.push(u[e][0],u[e][1]);this.ruler2=new h;for(let e=0;e<p.length;e++)this.ruler2.push(p[e][0],p[e][1])}c.prototype.skipToken=function(e){const i=e.pos,s=this.ruler.getRules(""),t=s.length,l=e.md.options.maxNesting,o=e.cache;if(typeof o[i]<"u"){e.pos=o[i];return}let r=!1;if(e.level<l){for(let n=0;n<t;n++)if(e.level++,r=s[n](e,!0),e.level--,r){if(i>=e.pos)throw new Error("inline rule didn't increment state.pos");break}}else e.pos=e.posMax;r||e.pos++,o[i]=e.pos};c.prototype.tokenize=function(e){const i=this.ruler.getRules(""),s=i.length,t=e.posMax,l=e.md.options.maxNesting;for(;e.pos<t;){const o=e.pos;let r=!1;if(e.level<l){for(let n=0;n<s;n++)if(r=i[n](e,!1),r){if(o>=e.pos)throw new Error("inline rule didn't increment state.pos");break}}if(r){if(e.pos>=t)break;continue}e.pending+=e.src[e.pos++]}e.pending&&e.pushPending()};c.prototype.parse=function(e,i,s,t){const l=new this.State(e,i,s,t);this.tokenize(l);const o=this.ruler2.getRules(""),r=o.length;for(let n=0;n<r;n++)o[n](l)};c.prototype.State=g;module.exports=c;
//# sourceMappingURL=parser_inline.js.map
