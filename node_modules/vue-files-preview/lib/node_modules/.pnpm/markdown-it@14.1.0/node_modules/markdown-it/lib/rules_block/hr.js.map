{"version":3,"file":"hr.js","sources":["../../../../../../../../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_block/hr.mjs"],"sourcesContent":["// Horizontal rule\n\nimport { isSpace } from '../common/utils.mjs'\n\nexport default function hr (state, startLine, endLine, silent) {\n  const max = state.eMarks[startLine]\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false }\n\n  let pos = state.bMarks[startLine] + state.tShift[startLine]\n  const marker = state.src.charCodeAt(pos++)\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  let cnt = 1\n  while (pos < max) {\n    const ch = state.src.charCodeAt(pos++)\n    if (ch !== marker && !isSpace(ch)) { return false }\n    if (ch === marker) { cnt++ }\n  }\n\n  if (cnt < 3) { return false }\n\n  if (silent) { return true }\n\n  state.line = startLine + 1\n\n  const token  = state.push('hr', 'hr', 0)\n  token.map    = [startLine, state.line]\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker))\n\n  return true\n}\n"],"names":["hr","state","startLine","endLine","silent","max","pos","marker","cnt","ch","isSpace","token"],"mappings":"mDAIe,SAASA,EAAIC,EAAOC,EAAWC,EAASC,EAAQ,CAC7D,MAAMC,EAAMJ,EAAM,OAAOC,CAAS,EAElC,GAAID,EAAM,OAAOC,CAAS,EAAID,EAAM,WAAa,EAAK,MAAO,GAE7D,IAAIK,EAAML,EAAM,OAAOC,CAAS,EAAID,EAAM,OAAOC,CAAS,EAC1D,MAAMK,EAASN,EAAM,IAAI,WAAWK,GAAK,EAGzC,GAAIC,IAAW,IACXA,IAAW,IACXA,IAAW,GACb,MAAO,GAKT,IAAIC,EAAM,EACV,KAAOF,EAAMD,GAAK,CAChB,MAAMI,EAAKR,EAAM,IAAI,WAAWK,GAAK,EACrC,GAAIG,IAAOF,GAAU,CAACG,EAAAA,QAAQD,CAAE,EAAK,MAAO,GACxCA,IAAOF,GAAUC,GACtB,CAED,GAAIA,EAAM,EAAK,MAAO,GAEtB,GAAIJ,EAAU,MAAO,GAErBH,EAAM,KAAOC,EAAY,EAEzB,MAAMS,EAASV,EAAM,KAAK,KAAM,KAAM,CAAC,EACvC,OAAAU,EAAM,IAAS,CAACT,EAAWD,EAAM,IAAI,EACrCU,EAAM,OAAS,MAAMH,EAAM,CAAC,EAAE,KAAK,OAAO,aAAaD,CAAM,CAAC,EAEvD,EACT","x_google_ignoreList":[0]}