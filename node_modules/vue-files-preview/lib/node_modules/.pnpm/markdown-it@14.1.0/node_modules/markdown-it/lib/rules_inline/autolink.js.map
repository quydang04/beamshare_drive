{"version":3,"file":"autolink.js","sources":["../../../../../../../../../node_modules/.pnpm/markdown-it@14.1.0/node_modules/markdown-it/lib/rules_inline/autolink.mjs"],"sourcesContent":["// Process autolinks '<protocol:...>'\n\n/* eslint max-len:0 */\nconst EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/\n/* eslint-disable-next-line no-control-regex */\nconst AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.-]{1,31}):([^<>\\x00-\\x20]*)$/\n\nexport default function autolink (state, silent) {\n  let pos = state.pos\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false }\n\n  const start = state.pos\n  const max = state.posMax\n\n  for (;;) {\n    if (++pos >= max) return false\n\n    const ch = state.src.charCodeAt(pos)\n\n    if (ch === 0x3C /* < */) return false\n    if (ch === 0x3E /* > */) break\n  }\n\n  const url = state.src.slice(start + 1, pos)\n\n  if (AUTOLINK_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink(url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  if (EMAIL_RE.test(url)) {\n    const fullUrl = state.md.normalizeLink('mailto:' + url)\n    if (!state.md.validateLink(fullUrl)) { return false }\n\n    if (!silent) {\n      const token_o   = state.push('link_open', 'a', 1)\n      token_o.attrs   = [['href', fullUrl]]\n      token_o.markup  = 'autolink'\n      token_o.info    = 'auto'\n\n      const token_t   = state.push('text', '', 0)\n      token_t.content = state.md.normalizeLinkText(url)\n\n      const token_c   = state.push('link_close', 'a', -1)\n      token_c.markup  = 'autolink'\n      token_c.info    = 'auto'\n    }\n\n    state.pos += url.length + 2\n    return true\n  }\n\n  return false\n}\n"],"names":["EMAIL_RE","AUTOLINK_RE","autolink","state","silent","pos","start","max","ch","url","fullUrl","token_o","token_t","token_c"],"mappings":"aAGA,MAAMA,EAAc,yIAEdC,EAAc,qDAEL,SAASC,EAAUC,EAAOC,EAAQ,CAC/C,IAAIC,EAAMF,EAAM,IAEhB,GAAIA,EAAM,IAAI,WAAWE,CAAG,IAAM,GAAe,MAAO,GAExD,MAAMC,EAAQH,EAAM,IACdI,EAAMJ,EAAM,OAElB,OAAS,CACP,GAAI,EAAEE,GAAOE,EAAK,MAAO,GAEzB,MAAMC,EAAKL,EAAM,IAAI,WAAWE,CAAG,EAEnC,GAAIG,IAAO,GAAc,MAAO,GAChC,GAAIA,IAAO,GAAc,KAC1B,CAED,MAAMC,EAAMN,EAAM,IAAI,MAAMG,EAAQ,EAAGD,CAAG,EAE1C,GAAIJ,EAAY,KAAKQ,CAAG,EAAG,CACzB,MAAMC,EAAUP,EAAM,GAAG,cAAcM,CAAG,EAC1C,GAAI,CAACN,EAAM,GAAG,aAAaO,CAAO,EAAK,MAAO,GAE9C,GAAI,CAACN,EAAQ,CACX,MAAMO,EAAYR,EAAM,KAAK,YAAa,IAAK,CAAC,EAChDQ,EAAQ,MAAU,CAAC,CAAC,OAAQD,CAAO,CAAC,EACpCC,EAAQ,OAAU,WAClBA,EAAQ,KAAU,OAElB,MAAMC,EAAYT,EAAM,KAAK,OAAQ,GAAI,CAAC,EAC1CS,EAAQ,QAAUT,EAAM,GAAG,kBAAkBM,CAAG,EAEhD,MAAMI,EAAYV,EAAM,KAAK,aAAc,IAAK,EAAE,EAClDU,EAAQ,OAAU,WAClBA,EAAQ,KAAU,MACnB,CAED,OAAAV,EAAM,KAAOM,EAAI,OAAS,EACnB,EACR,CAED,GAAIT,EAAS,KAAKS,CAAG,EAAG,CACtB,MAAMC,EAAUP,EAAM,GAAG,cAAc,UAAYM,CAAG,EACtD,GAAI,CAACN,EAAM,GAAG,aAAaO,CAAO,EAAK,MAAO,GAE9C,GAAI,CAACN,EAAQ,CACX,MAAMO,EAAYR,EAAM,KAAK,YAAa,IAAK,CAAC,EAChDQ,EAAQ,MAAU,CAAC,CAAC,OAAQD,CAAO,CAAC,EACpCC,EAAQ,OAAU,WAClBA,EAAQ,KAAU,OAElB,MAAMC,EAAYT,EAAM,KAAK,OAAQ,GAAI,CAAC,EAC1CS,EAAQ,QAAUT,EAAM,GAAG,kBAAkBM,CAAG,EAEhD,MAAMI,EAAYV,EAAM,KAAK,aAAc,IAAK,EAAE,EAClDU,EAAQ,OAAU,WAClBA,EAAQ,KAAU,MACnB,CAED,OAAAV,EAAM,KAAOM,EAAI,OAAS,EACnB,EACR,CAED,MAAO,EACT","x_google_ignoreList":[0]}