{"version":3,"file":"index.js","sources":["../../../../../../../../../node_modules/.pnpm/@codemirror+lint@6.8.1/node_modules/@codemirror/lint/dist/index.js"],"sourcesContent":["import { Decoration, showPanel, EditorView, ViewPlugin, logException, gutter, showTooltip, hoverTooltip, getPanel, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let markedDiagnostics = diagnostics;\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            markedDiagnostics = diagnosticFilter(markedDiagnostics, state);\n        let ranges = Decoration.set(markedDiagnostics.map((d) => {\n            // For zero-length ranges or ranges covering only a line break, create a widget\n            return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)\n                ? Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from)\n                : Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity + (d.markClass ? \" \" + d.markClass : \"\") },\n                    diagnostic: d\n                }).range(d.from, d.to);\n        }), true);\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    let from = tooltip.pos, to = tooltip.end || from;\n    let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n    if (result != null)\n        return result;\n    let line = tr.startState.doc.lineAt(tooltip.pos);\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged && value.diagnostics.size) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null, panel = value.panel;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel)\n                panel = null;\n            value = new LintState(mapped, panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n                value = LintState.init(effect.value, panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (diagnosticFilter)\n        found = diagnosticFilter(found, view.state);\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\nconst previousDiagnostic = (view) => {\n    let { state } = view, field = state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = state.selection.main;\n    let prevFrom, prevTo, lastFrom, lastTo;\n    field.diagnostics.between(0, state.doc.length, (from, to) => {\n        if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n            prevFrom = from;\n            prevTo = to;\n        }\n        if (lastFrom == null || from > lastFrom) {\n            lastFrom = from;\n            lastTo = to;\n        }\n    });\n    if (lastFrom == null || prevFrom == null && lastFrom == sel.from)\n        return false;\n    view.dispatch({ selection: { anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom, head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        clearTimeout(this.timeout);\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            this.timeout = setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            if (sources.length)\n                Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n                    let all = annotations.reduce((a, b) => a.concat(b));\n                    if (this.view.state.doc == state.doc)\n                        this.view.dispatch(setDiagnostics(this.view.state, all));\n                }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source).filter(x => x != null) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null,\n            hideOn: () => null,\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\nfunction linter(source, config = {}) {\n    return [\n        lintConfig.of({ source, config }),\n        lintPlugin,\n        lintExtensions\n    ];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    let scaleY = panel.height / this.list.offsetHeight;\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= (panel.top - sel.top) / scaleY;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnostic-hint\": { borderLeft: \"5px solid #66d\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-hint\": { backgroundImage: /*@__PURE__*/underline(\"#66d\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-lintPoint-hint\": {\n        \"&:after\": { borderBottomColor: \"#66d\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nfunction severityWeight(sev) {\n    return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = diagnostics.reduce((max, d) => severityWeight(max) < severityWeight(d.severity) ? d.severity : max, \"hint\");\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics, view.state);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ &&\n            event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintExtensions = [\n    lintState,\n    /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n        let { selected, panel } = state.field(lintState);\n        return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n            activeMark.range(selected.from, selected.to)\n        ]);\n    }),\n    /*@__PURE__*/hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n    baseTheme\n];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Hover.Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size)\n        for (let iter = RangeSet.iter([lState.diagnostics]); iter.value; iter.next())\n            f(iter.value.spec.diagnostic, iter.from, iter.to);\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };\n"],"names":["SelectedDiagnostic","from","to","diagnostic","LintState","diagnostics","panel","selected","state","markedDiagnostics","diagnosticFilter","lintConfig","ranges","Decoration","d","DiagnosticWidget","findDiagnostic","after","found","spec","hideTooltip","tr","tooltip","result","line","e","setDiagnosticsEffect","maybeEnableLint","effects","lintState","StateEffect","lintExtensions","togglePanel","movePanelSelection","StateField","value","mapped","selPos","effect","LintPanel","f","showPanel","val","EditorView","s","activeMark","lintTooltip","view","pos","side","stackStart","stackEnd","diagnosticsTooltip","elt","renderDiagnostic","openLintPanel","field","getPanel","closeLintPanel","nextDiagnostic","sel","next","lintKeymap","Facet","input","i","x","combineConfig","a","b","u","assignKeys","actions","assigned","name","ch","c","inPanel","_a","keys","action","fired","click","keyIndex","nameElt","WidgetType","other","PanelItem","onkeydown","event","onclick","needsSync","newSelectedItem","_start","_end","item","j","scaleY","domPos","rm","prev","selectedIndex","selection","svg","content","attrs","underline","color","baseTheme","hoverTooltip"],"mappings":"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","x_google_ignoreList":[0]}