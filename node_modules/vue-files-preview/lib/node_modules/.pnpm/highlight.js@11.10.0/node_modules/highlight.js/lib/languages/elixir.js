"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});var o,l;function N(){if(l)return o;l=1;function _(n){const t=n.regex,r="[a-zA-Z_][a-zA-Z0-9_.]*(!|\\?)?",u="[a-zA-Z_]\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\*\\*|[-/+%^&*~`|]|\\[\\]=?",d={$pattern:r,keyword:["after","alias","and","case","catch","cond","defstruct","defguard","do","else","end","fn","for","if","import","in","not","or","quote","raise","receive","require","reraise","rescue","try","unless","unquote","unquote_splicing","use","when","with|0"],literal:["false","nil","true"]},i={className:"subst",begin:/#\{/,end:/\}/,keywords:d},m={className:"number",begin:"(\\b0o[0-7_]+)|(\\b0b[01_]+)|(\\b0x[0-9a-fA-F_]+)|(-?\\b[0-9][0-9_]*(\\.[0-9_]+([eE][-+]?[0-9]+)?)?)",relevance:0},b={match:/\\[\s\S]/,scope:"char.escape",relevance:0},a=`[/|([{<"']`,s=[{begin:/"/,end:/"/},{begin:/'/,end:/'/},{begin:/\//,end:/\//},{begin:/\|/,end:/\|/},{begin:/\(/,end:/\)/},{begin:/\[/,end:/\]/},{begin:/\{/,end:/\}/},{begin:/</,end:/>/}],c=e=>({scope:"char.escape",begin:t.concat(/\\/,e),relevance:0}),I={className:"string",begin:"~[a-z](?="+a+")",contains:s.map(e=>n.inherit(e,{contains:[c(e.end),b,i]}))},f={className:"string",begin:"~[A-Z](?="+a+")",contains:s.map(e=>n.inherit(e,{contains:[c(e.end)]}))},A={className:"regex",variants:[{begin:"~r(?="+a+")",contains:s.map(e=>n.inherit(e,{end:t.concat(e.end,/[uismxfU]{0,7}/),contains:[c(e.end),b,i]}))},{begin:"~R(?="+a+")",contains:s.map(e=>n.inherit(e,{end:t.concat(e.end,/[uismxfU]{0,7}/),contains:[c(e.end)]}))}]},g={className:"string",contains:[n.BACKSLASH_ESCAPE,i],variants:[{begin:/"""/,end:/"""/},{begin:/'''/,end:/'''/},{begin:/~S"""/,end:/"""/,contains:[]},{begin:/~S"/,end:/"/,contains:[]},{begin:/~S'''/,end:/'''/,contains:[]},{begin:/~S'/,end:/'/,contains:[]},{begin:/'/,end:/'/},{begin:/"/,end:/"/}]},E={className:"function",beginKeywords:"def defp defmacro defmacrop",end:/\B\b/,contains:[n.inherit(n.TITLE_MODE,{begin:r,endsParent:!0})]},L=n.inherit(E,{className:"class",beginKeywords:"defimpl defmodule defprotocol defrecord",end:/\bdo\b|$|;/}),S=[g,A,f,I,n.HASH_COMMENT_MODE,L,E,{begin:"::"},{className:"symbol",begin:":(?![\\s:])",contains:[g,{begin:u}],relevance:0},{className:"symbol",begin:r+":(?!:)",relevance:0},{className:"title.class",begin:/(\b[A-Z][a-zA-Z0-9_]+)/,relevance:0},m,{className:"variable",begin:"(\\$\\W)|((\\$|@@?)(\\w+))"}];return i.contains=S,{name:"Elixir",aliases:["ex","exs"],keywords:d,contains:S}}return o=_,o}exports.__require=N;
//# sourceMappingURL=elixir.js.map
