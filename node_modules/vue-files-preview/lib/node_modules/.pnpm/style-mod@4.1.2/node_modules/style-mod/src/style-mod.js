"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const S="Í¼",m=typeof Symbol>"u"?"__"+S:Symbol.for(S),c=typeof Symbol>"u"?"__styleSet"+Math.floor(Math.random()*1e8):Symbol("styleSet"),w=typeof globalThis<"u"?globalThis:typeof window<"u"?window:{};class A{constructor(e,s){this.rules=[];let{finish:i}=s||{};function n(t){return/^@/.test(t)?[t]:t.split(/,\s*/)}function l(t,o,h,r){let y=[],f=/^@(\w+)\b/.exec(t[0]),g=f&&f[1]=="keyframes";if(f&&o==null)return h.push(t[0]+";");for(let u in o){let a=o[u];if(/&/.test(u))l(u.split(/,\s*/).map(d=>t.map(p=>d.replace(/&/,p))).reduce((d,p)=>d.concat(p)),a,h);else if(a&&typeof a=="object"){if(!f)throw new RangeError("The value of a property ("+u+") should be a primitive value.");l(n(u),a,y,g)}else a!=null&&y.push(u.replace(/_.*/,"").replace(/[A-Z]/g,d=>"-"+d.toLowerCase())+": "+a+";")}(y.length||g)&&h.push((i&&!f&&!r?t.map(i):t).join(", ")+" {"+y.join(" ")+"}")}for(let t in e)l(n(t),e[t],this.rules)}getRules(){return this.rules.join(`
`)}static newName(){let e=w[m]||1;return w[m]=e+1,S+e.toString(36)}static mount(e,s,i){let n=e[c],l=i&&i.nonce;n?l&&n.setNonce(l):n=new C(e,l),n.mount(Array.isArray(s)?s:[s],e)}}let b=new Map;class C{constructor(e,s){let i=e.ownerDocument||e,n=i.defaultView;if(!e.head&&e.adoptedStyleSheets&&n.CSSStyleSheet){let l=b.get(i);if(l)return e[c]=l;this.sheet=new n.CSSStyleSheet,b.set(i,this)}else this.styleTag=i.createElement("style"),s&&this.styleTag.setAttribute("nonce",s);this.modules=[],e[c]=this}mount(e,s){let i=this.sheet,n=0,l=0;for(let t=0;t<e.length;t++){let o=e[t],h=this.modules.indexOf(o);if(h<l&&h>-1&&(this.modules.splice(h,1),l--,h=-1),h==-1){if(this.modules.splice(l++,0,o),i)for(let r=0;r<o.rules.length;r++)i.insertRule(o.rules[r],n++)}else{for(;l<h;)n+=this.modules[l++].rules.length;n+=o.rules.length,l++}}if(i)s.adoptedStyleSheets.indexOf(this.sheet)<0&&(s.adoptedStyleSheets=[this.sheet,...s.adoptedStyleSheets]);else{let t="";for(let h=0;h<this.modules.length;h++)t+=this.modules[h].getRules()+`
`;this.styleTag.textContent=t;let o=s.head||s;this.styleTag.parentNode!=o&&o.insertBefore(this.styleTag,o.firstChild)}}setNonce(e){this.styleTag&&this.styleTag.getAttribute("nonce")!=e&&this.styleTag.setAttribute("nonce",e)}}exports.StyleModule=A;
//# sourceMappingURL=style-mod.js.map
