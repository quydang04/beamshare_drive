{"version":3,"file":"events.js","sources":["../../../../../../../../node_modules/.pnpm/marks-pane@1.0.9/node_modules/marks-pane/lib/events.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.proxyMouse = proxyMouse;\nexports.clone = clone;\n// import 'babelify/polyfill'; // needed for Object.assign\n\nexports.default = {\n    proxyMouse: proxyMouse\n};\n\n/**\n * Start proxying all mouse events that occur on the target node to each node in\n * a set of tracked nodes.\n *\n * The items in tracked do not strictly have to be DOM Nodes, but they do have\n * to have dispatchEvent, getBoundingClientRect, and getClientRects methods.\n *\n * @param target {Node} The node on which to listen for mouse events.\n * @param tracked {Node[]} A (possibly mutable) array of nodes to which to proxy\n *                         events.\n */\n\nfunction proxyMouse(target, tracked) {\n    function dispatch(e) {\n        // We walk through the set of tracked elements in reverse order so that\n        // events are sent to those most recently added first.\n        //\n        // This is the least surprising behaviour as it simulates the way the\n        // browser would work if items added later were drawn \"on top of\"\n        // earlier ones.\n        for (var i = tracked.length - 1; i >= 0; i--) {\n            var t = tracked[i];\n            var x = e.clientX;\n            var y = e.clientY;\n\n            if (e.touches && e.touches.length) {\n                x = e.touches[0].clientX;\n                y = e.touches[0].clientY;\n            }\n\n            if (!contains(t, target, x, y)) {\n                continue;\n            }\n\n            // The event targets this mark, so dispatch a cloned event:\n            t.dispatchEvent(clone(e));\n            // We only dispatch the cloned event to the first matching mark.\n            break;\n        }\n    }\n\n    if (target.nodeName === \"iframe\" || target.nodeName === \"IFRAME\") {\n\n        try {\n            // Try to get the contents if same domain\n            this.target = target.contentDocument;\n        } catch (err) {\n            this.target = target;\n        }\n    } else {\n        this.target = target;\n    }\n\n    var _arr = ['mouseup', 'mousedown', 'click', 'touchstart'];\n    for (var _i = 0; _i < _arr.length; _i++) {\n        var ev = _arr[_i];\n        this.target.addEventListener(ev, function (e) {\n            return dispatch(e);\n        }, false);\n    }\n}\n\n/**\n * Clone a mouse event object.\n *\n * @param e {MouseEvent} A mouse event object to clone.\n * @returns {MouseEvent}\n */\nfunction clone(e) {\n    var opts = Object.assign({}, e, { bubbles: false });\n    try {\n        return new MouseEvent(e.type, opts);\n    } catch (err) {\n        // compat: webkit\n        var copy = document.createEvent('MouseEvents');\n        copy.initMouseEvent(e.type, false, opts.cancelable, opts.view, opts.detail, opts.screenX, opts.screenY, opts.clientX, opts.clientY, opts.ctrlKey, opts.altKey, opts.shiftKey, opts.metaKey, opts.button, opts.relatedTarget);\n        return copy;\n    }\n}\n\n/**\n * Check if the item contains the point denoted by the passed coordinates\n * @param item {Object} An object with getBoundingClientRect and getClientRects\n *                      methods.\n * @param x {Number}\n * @param y {Number}\n * @returns {Boolean}\n */\nfunction contains(item, target, x, y) {\n    // offset\n    var offset = target.getBoundingClientRect();\n\n    function rectContains(r, x, y) {\n        var top = r.top - offset.top;\n        var left = r.left - offset.left;\n        var bottom = top + r.height;\n        var right = left + r.width;\n        return top <= y && left <= x && bottom > y && right > x;\n    }\n\n    // Check overall bounding box first\n    var rect = item.getBoundingClientRect();\n    if (!rectContains(rect, x, y)) {\n        return false;\n    }\n\n    // Then continue to check each child rect\n    var rects = item.getClientRects();\n    for (var i = 0, len = rects.length; i < len; i++) {\n        if (rectContains(rects[i], x, y)) {\n            return true;\n        }\n    }\n    return false;\n}\n"],"names":["events","proxyMouse","clone","target","tracked","dispatch","e","i","t","x","y","contains","_arr","_i","ev","opts","copy","item","offset","rectContains","r","top","left","bottom","right","rect","rects","len"],"mappings":"qEAEA,OAAO,eAAeA,EAAO,UAAE,aAAc,CACzC,MAAO,EACX,CAAC,EACiBA,EAAA,UAAA,WAAGC,EACRD,EAAA,UAAA,MAAGE,EAGhBF,EAAA,UAAA,QAAkB,CACd,WAAYC,CAChB,EAcA,SAASA,EAAWE,EAAQC,EAAS,CACjC,SAASC,EAASC,EAAG,CAOjB,QAASC,EAAIH,EAAQ,OAAS,EAAGG,GAAK,EAAGA,IAAK,CAC1C,IAAIC,EAAIJ,EAAQG,CAAC,EACbE,EAAIH,EAAE,QACNI,EAAIJ,EAAE,QAOV,GALIA,EAAE,SAAWA,EAAE,QAAQ,SACvBG,EAAIH,EAAE,QAAQ,CAAC,EAAE,QACjBI,EAAIJ,EAAE,QAAQ,CAAC,EAAE,SAGjB,EAACK,EAASH,EAAGL,EAAQM,EAAGC,CAAC,EAK7B,CAAAF,EAAE,cAAcN,EAAMI,CAAC,CAAC,EAExB,MACH,CACJ,CAED,GAAIH,EAAO,WAAa,UAAYA,EAAO,WAAa,SAEpD,GAAI,CAEA,KAAK,OAASA,EAAO,eACxB,MAAa,CACV,KAAK,OAASA,CACjB,MAED,KAAK,OAASA,EAIlB,QADIS,EAAO,CAAC,UAAW,YAAa,QAAS,YAAY,EAChDC,EAAK,EAAGA,EAAKD,EAAK,OAAQC,IAAM,CACrC,IAAIC,EAAKF,EAAKC,CAAE,EAChB,KAAK,OAAO,iBAAiBC,EAAI,SAAUR,EAAG,CAC1C,OAAOD,EAASC,CAAC,CACpB,EAAE,EAAK,CACX,CACL,CAQA,SAASJ,EAAMI,EAAG,CACd,IAAIS,EAAO,OAAO,OAAO,CAAA,EAAIT,EAAG,CAAE,QAAS,EAAK,CAAE,EAClD,GAAI,CACA,OAAO,IAAI,WAAWA,EAAE,KAAMS,CAAI,CACrC,MAAa,CAEV,IAAIC,EAAO,SAAS,YAAY,aAAa,EAC7C,OAAAA,EAAK,eAAeV,EAAE,KAAM,GAAOS,EAAK,WAAYA,EAAK,KAAMA,EAAK,OAAQA,EAAK,QAASA,EAAK,QAASA,EAAK,QAASA,EAAK,QAASA,EAAK,QAASA,EAAK,OAAQA,EAAK,SAAUA,EAAK,QAASA,EAAK,OAAQA,EAAK,aAAa,EACpNC,CACV,CACL,CAUA,SAASL,EAASM,EAAMd,EAAQM,EAAGC,EAAG,CAElC,IAAIQ,EAASf,EAAO,wBAEpB,SAASgB,EAAaC,EAAGX,EAAGC,EAAG,CAC3B,IAAIW,EAAMD,EAAE,IAAMF,EAAO,IACrBI,EAAOF,EAAE,KAAOF,EAAO,KACvBK,EAASF,EAAMD,EAAE,OACjBI,EAAQF,EAAOF,EAAE,MACrB,OAAOC,GAAOX,GAAKY,GAAQb,GAAKc,EAASb,GAAKc,EAAQf,CACzD,CAGD,IAAIgB,EAAOR,EAAK,wBAChB,GAAI,CAACE,EAAaM,EAAMhB,EAAGC,CAAC,EACxB,MAAO,GAKX,QADIgB,EAAQT,EAAK,iBACRV,EAAI,EAAGoB,EAAMD,EAAM,OAAQnB,EAAIoB,EAAKpB,IACzC,GAAIY,EAAaO,EAAMnB,CAAC,EAAGE,EAAGC,CAAC,EAC3B,MAAO,GAGf,MAAO,EACX","x_google_ignoreList":[0]}