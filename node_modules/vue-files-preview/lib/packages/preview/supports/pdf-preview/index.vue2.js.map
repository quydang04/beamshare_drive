{"version":3,"file":"index.vue2.js","sources":["../../../../../../packages/preview/supports/pdf-preview/index.vue"],"sourcesContent":["<script lang=\"ts\" setup>\nimport { watch } from 'vue'\nimport type { PreviewProps } from '../../preview.interface'\nimport { getFileRenderByFile } from '../../utils/utils'\n\nconst props = withDefaults(defineProps<PreviewProps>(), {\n  url: () => null,\n  file: () => null,\n})\n\nconst fileRender = ref(null)\nwatch(\n  () => props.file,\n  (file) => {\n    if (file) {\n      getFileRenderByFile(file).then(render => (fileRender.value = render))\n    }\n  },\n  { immediate: true },\n)\n\nwatch(\n  () => props.url,\n  (url) => {\n    if (url) {\n      fileRender.value = url\n    }\n  },\n  { immediate: true },\n)\n</script>\n\n<template>\n  <div class=\"pdf-preview\">\n    <iframe class=\"pdf-iframe\" :src=\"fileRender\" frameborder=\"0\" />\n  </div>\n</template>\n\n<style scoped lang=\"scss\">\n.pdf-iframe {\n  width: 100%;\n  height: 100vh;\n}\n</style>\n"],"names":["props","__props","fileRender","ref","watch","file","getFileRenderByFile","render","url"],"mappings":"oNAKA,MAAMA,EAAQC,EAKRC,EAAaC,MAAI,IAAI,EAC3BC,OAAAA,EAAA,MACE,IAAMJ,EAAM,KACXK,GAAS,CACJA,GACFC,sBAAoBD,CAAI,EAAE,KAAgBE,GAAAL,EAAW,MAAQK,CAAO,CAExE,EACA,CAAE,UAAW,EAAK,CAAA,EAGpBH,EAAA,MACE,IAAMJ,EAAM,IACXQ,GAAQ,CACHA,IACFN,EAAW,MAAQM,EAEvB,EACA,CAAE,UAAW,EAAK,CAAA"}