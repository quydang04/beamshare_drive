{"version":3,"file":"utils.js","sources":["../../../../../packages/preview/utils/utils.ts"],"sourcesContent":["import type {FileRenderType, PreviewType} from '../preview.interface'\nimport {\n    arrayBufferPreviewTypeList,\n    getPreviewTypeByFileType,\n    imagePreviewTypeList,\n    pdfPreviewTypeList,\n    textFilePreviewTypeList,\n    videoPreviewTypeList,\n} from '../preview.const'\n\n/**\n * 获取文件类型\n * @param file\n */\nexport function getFileType(file: File): string {\n    const fileName = file.name\n    const idx = fileName.lastIndexOf('.')\n    return fileName.substring(idx + 1)\n}\n\n/**\n * 获取文件名\n * @param file\n */\nexport function getFileName(file: File): string {\n    const fileAllName = file.name\n    const idx = fileAllName.lastIndexOf('.')\n    return fileAllName.substring(0, idx)\n}\n\n/**\n * 通过文件类型获取fileRender\n */\nexport function getFileRenderByFile(file: File): Promise<ArrayBuffer | string> {\n    const previewType = getPreviewTypeByFileType(getFileType(file))\n    const renderType = getFileRenderType(previewType)\n    return new Promise((resolve) => {\n        const raw = file\n        const fileReader = new FileReader()\n        switch (renderType) {\n            case 'text':\n                fileReader.readAsText(raw)\n                fileReader.onload = () => {\n                    resolve(fileReader.result)\n                }\n                break\n            case 'arrayBuffer':\n                fileReader.readAsArrayBuffer(raw)\n                fileReader.onload = () => {\n                    resolve(fileReader.result)\n                }\n                break\n            case 'image':\n                resolve(window.URL.createObjectURL(raw))\n                break\n            case 'pdf': {\n                const pdfBloBlob = new Blob([raw], {type: 'application/pdf'})\n                const pdfBlobUrl = URL.createObjectURL(pdfBloBlob)\n                resolve(pdfBlobUrl)\n                break\n            }\n            case 'video': {\n                const videoBlobUrl = URL.createObjectURL(new Blob([raw], {type: 'video/mp4'}))\n                resolve(videoBlobUrl)\n                break\n            }\n            default:\n                resolve(window.URL.createObjectURL(raw))\n                break\n        }\n    })\n}\n\n/**\n * 获取文件渲染数据类型\n * @param previewType\n */\nexport function getFileRenderType(previewType: PreviewType): FileRenderType {\n    const types: Record<FileRenderType, boolean> = {\n        text: textFilePreviewTypeList.includes(previewType),\n        arrayBuffer: arrayBufferPreviewTypeList.includes(previewType),\n        image: imagePreviewTypeList.includes(previewType),\n        pdf: pdfPreviewTypeList.includes(previewType),\n        video: videoPreviewTypeList.includes(previewType),\n    }\n    return Object.keys(types)!.find(key => types[key]) as FileRenderType\n}\n"],"names":["getFileType","file","fileName","idx","getFileName","fileAllName","getFileRenderByFile","previewType","getPreviewTypeByFileType","renderType","getFileRenderType","resolve","raw","fileReader","pdfBloBlob","pdfBlobUrl","videoBlobUrl","types","textFilePreviewTypeList","arrayBufferPreviewTypeList","imagePreviewTypeList","pdfPreviewTypeList","videoPreviewTypeList","key"],"mappings":"uHAcO,SAASA,EAAYC,EAAoB,CAC5C,MAAMC,EAAWD,EAAK,KAChBE,EAAMD,EAAS,YAAY,GAAG,EAC7B,OAAAA,EAAS,UAAUC,EAAM,CAAC,CACrC,CAMO,SAASC,EAAYH,EAAoB,CAC5C,MAAMI,EAAcJ,EAAK,KACnBE,EAAME,EAAY,YAAY,GAAG,EAChC,OAAAA,EAAY,UAAU,EAAGF,CAAG,CACvC,CAKO,SAASG,EAAoBL,EAA2C,CAC3E,MAAMM,EAAcC,EAAA,yBAAyBR,EAAYC,CAAI,CAAC,EACxDQ,EAAaC,EAAkBH,CAAW,EACzC,OAAA,IAAI,QAASI,GAAY,CAC5B,MAAMC,EAAMX,EACNY,EAAa,IAAI,WACvB,OAAQJ,EAAY,CAChB,IAAK,OACDI,EAAW,WAAWD,CAAG,EACzBC,EAAW,OAAS,IAAM,CACtBF,EAAQE,EAAW,MAAM,CAAA,EAE7B,MACJ,IAAK,cACDA,EAAW,kBAAkBD,CAAG,EAChCC,EAAW,OAAS,IAAM,CACtBF,EAAQE,EAAW,MAAM,CAAA,EAE7B,MACJ,IAAK,QACDF,EAAQ,OAAO,IAAI,gBAAgBC,CAAG,CAAC,EACvC,MACJ,IAAK,MAAO,CACF,MAAAE,EAAa,IAAI,KAAK,CAACF,CAAG,EAAG,CAAC,KAAM,iBAAA,CAAkB,EACtDG,EAAa,IAAI,gBAAgBD,CAAU,EACjDH,EAAQI,CAAU,EAClB,KACJ,CACA,IAAK,QAAS,CACV,MAAMC,EAAe,IAAI,gBAAgB,IAAI,KAAK,CAACJ,CAAG,EAAG,CAAC,KAAM,WAAW,CAAC,CAAC,EAC7ED,EAAQK,CAAY,EACpB,KACJ,CACA,QACIL,EAAQ,OAAO,IAAI,gBAAgBC,CAAG,CAAC,EACvC,KACR,CAAA,CACH,CACL,CAMO,SAASF,EAAkBH,EAA0C,CACxE,MAAMU,EAAyC,CAC3C,KAAMC,EAAAA,wBAAwB,SAASX,CAAW,EAClD,YAAaY,EAAAA,2BAA2B,SAASZ,CAAW,EAC5D,MAAOa,EAAAA,qBAAqB,SAASb,CAAW,EAChD,IAAKc,EAAAA,mBAAmB,SAASd,CAAW,EAC5C,MAAOe,EAAAA,qBAAqB,SAASf,CAAW,CAAA,EAE7C,OAAA,OAAO,KAAKU,CAAK,EAAG,KAAYM,GAAAN,EAAMM,CAAG,CAAC,CACrD"}